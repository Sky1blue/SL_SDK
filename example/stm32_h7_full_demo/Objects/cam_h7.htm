<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\cam_h7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\cam_h7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Sat Aug  7 23:48:37 2021
<BR><P>
<H3>Maximum Stack Usage =       2976 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
lv_arc_event &rArr; lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[15f]">__user_initial_stackheap</a>
 <LI><a href="#[6]">SVC_Handler</a>
 <LI><a href="#[8]">PendSV_Handler</a>
 <LI><a href="#[9]">SysTick_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[81]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[81]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[3be]">osRtxThreadListRoot</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3be]">osRtxThreadListRoot</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3b5]">osRtxErrorNotify</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b5]">osRtxErrorNotify</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[f8]">osRtxIdleThread</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f8]">osRtxIdleThread</a><BR>
 <LI><a href="#[38b]">lv_refr_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38b]">lv_refr_obj</a><BR>
 <LI><a href="#[38a]">lv_refr_get_top_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38a]">lv_refr_get_top_obj</a><BR>
 <LI><a href="#[28d]">event_send_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28d]">event_send_core</a><BR>
 <LI><a href="#[226]">_lv_area_is_point_on</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[226]">_lv_area_is_point_on</a><BR>
 <LI><a href="#[28c]">lv_draw_label</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28a]">lv_draw_rect</a><BR>
 <LI><a href="#[2f8]">lv_draw_line</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28a]">lv_draw_rect</a><BR>
 <LI><a href="#[2f2]">show_error</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28a]">lv_draw_rect</a><BR>
 <LI><a href="#[b0]">lv_obj_get_style_prop</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b0]">lv_obj_get_style_prop</a><BR>
 <LI><a href="#[276]">lv_obj_move_children_by</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[276]">lv_obj_move_children_by</a><BR>
 <LI><a href="#[2c1]">layout_update_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c1]">layout_update_core</a><BR>
 <LI><a href="#[384]">refresh_children_style</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[384]">refresh_children_style</a><BR>
 <LI><a href="#[35a]">lv_obj_construct</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35a]">lv_obj_construct</a><BR>
 <LI><a href="#[24f]">apply_theme</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24f]">apply_theme</a><BR>
 <LI><a href="#[3a7]">report_style_change_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a7]">report_style_change_core</a><BR>
 <LI><a href="#[35c]">obj_del_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35c]">obj_del_core</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[81]">ADC3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[83]">BDMA_Channel0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[84]">BDMA_Channel1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[85]">BDMA_Channel2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[86]">BDMA_Channel3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[87]">BDMA_Channel4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[88]">BDMA_Channel5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[89]">BDMA_Channel6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8a]">BDMA_Channel7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-e2b3d9.o(.text.BusFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[62]">CEC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8b]">COMP1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[91]">CRS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[53]">DCMI_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[72]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[73]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[74]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[75]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from lto-llvm-e2b3d9.o(.text.DMA1_Stream0_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from lto-llvm-e2b3d9.o(.text.DMA1_Stream1_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[38]">DMA1_Stream7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5e]">DMA2D_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[41]">DMA2_Stream0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[49]">DMA2_Stream5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6a]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[82]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-e2b3d9.o(.text.DebugMon_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[92]">ECC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[46]">ETH_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[47]">ETH_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1d]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1f]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1e]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[20]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[48]">FDCAN_CAL_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[39]">FMC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[55]">FPU_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[ed]">HAL_GPIO_Init</a> from lto-llvm-e2b3d9.o(.text.HAL_GPIO_Init) referenced from lto-llvm-e2b3d9.o(.text.main)
 <LI><a href="#[ec]">HAL_MPU_ConfigRegion</a> from lto-llvm-e2b3d9.o(.text.HAL_MPU_ConfigRegion) referenced from lto-llvm-e2b3d9.o(.text.main)
 <LI><a href="#[71]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6b]">HRTIM1_Master_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6c]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6d]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6e]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[6f]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[70]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[80]">HSEM1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-e2b3d9.o(.text.HardFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4e]">I2C3_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4d]">I2C3_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[64]">I2C4_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[63]">I2C4_EV_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7d]">JPEG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[61]">LPTIM1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8c]">LPTIM2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8d]">LPTIM3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8e]">LPTIM4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8f]">LPTIM5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[90]">LPUART1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5d]">LTDC_ER_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5c]">LTDC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7c]">MDIOS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7b]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7e]">MDMA_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-e2b3d9.o(.text.MemManage_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-e2b3d9.o(.text.NMI_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[67]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[66]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[69]">OTG_FS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[68]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[50]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4f]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[52]">OTG_HS_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[51]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[b]">PVD_AVD_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from irq_armv7m.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[60]">QUADSPI_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[54]">RNG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5b]">SAI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5f]">SAI2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[76]">SAI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[93]">SAI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3a]">SDMMC1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7f]">SDMMC2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[65]">SPDIF_RX_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from lto-llvm-e2b3d9.o(.text.SPI2_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3c]">SPI3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[58]">SPI4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[59]">SPI5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5a]">SPI6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[97]">SPI_DMAAbortOnError</a> from lto-llvm-e2b3d9.o(.text.SPI_DMAAbortOnError) referenced from lto-llvm-e2b3d9.o(.text.HAL_SPI_IRQHandler)
 <LI><a href="#[103]">SPI_DMAError</a> from lto-llvm-e2b3d9.o(.text.SPI_DMAError) referenced from lto-llvm-e2b3d9.o(.text.spi_send_async)
 <LI><a href="#[105]">SPI_DMAHalfTransmitCplt</a> from lto-llvm-e2b3d9.o(.text.SPI_DMAHalfTransmitCplt) referenced from lto-llvm-e2b3d9.o(.text.spi_send_async)
 <LI><a href="#[104]">SPI_DMATransmitCplt</a> from lto-llvm-e2b3d9.o(.text.SPI_DMATransmitCplt) referenced from lto-llvm-e2b3d9.o(.text.spi_send_async)
 <LI><a href="#[6]">SVC_Handler</a> from irq_armv7m.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[77]">SWPMI1_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from irq_armv7m.o(.text) referenced from rtx_kernel.o(.text.svcRtxKernelStart)
 <LI><a href="#[9]">SysTick_Handler</a> from irq_armv7m.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[95]">SystemInit</a> from lto-llvm-e2b3d9.o(.text.SystemInit) referenced from startup_stm32h743xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[78]">TIM15_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[79]">TIM16_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[7a]">TIM17_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3b]">TIM5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3f]">TIM6_DAC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[40]">TIM7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[34]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[37]">TIM8_CC_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[36]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[35]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3d]">UART4_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[3e]">UART5_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[56]">UART7_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[57]">UART8_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[98]">UART_DMAAbortOnError</a> from lto-llvm-e2b3d9.o(.text.UART_DMAAbortOnError) referenced from lto-llvm-e2b3d9.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[a9]">UART_DMAError</a> from lto-llvm-e2b3d9.o(.text.UART_DMAError) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[ab]">UART_DMAReceiveCplt</a> from lto-llvm-e2b3d9.o(.text.UART_DMAReceiveCplt) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[aa]">UART_DMARxHalfCplt</a> from lto-llvm-e2b3d9.o(.text.UART_DMARxHalfCplt) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[99]">UART_RxISR_16BIT</a> from lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT) referenced from lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT_FIFOEN)
 <LI><a href="#[99]">UART_RxISR_16BIT</a> from lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[ac]">UART_RxISR_16BIT_FIFOEN</a> from lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT_FIFOEN) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[9a]">UART_RxISR_8BIT</a> from lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT) referenced from lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT_FIFOEN)
 <LI><a href="#[9a]">UART_RxISR_8BIT</a> from lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[ad]">UART_RxISR_8BIT_FIFOEN</a> from lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT_FIFOEN) referenced from lto-llvm-e2b3d9.o(.text.com_recv)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from lto-llvm-e2b3d9.o(.text.USART1_IRQHandler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[4c]">USART6_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-e2b3d9.o(.text.UsageFault_Handler) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[94]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32h743xx.o(.text) referenced from startup_stm32h743xx.o(RESET)
 <LI><a href="#[96]">__main</a> from __main.o(!!!main) referenced from startup_stm32h743xx.o(.text)
 <LI><a href="#[c1]">_lv_disp_refr_timer</a> from lto-llvm-e2b3d9.o(.text._lv_disp_refr_timer) referenced from lto-llvm-e2b3d9.o(.text.lv_disp_drv_register)
 <LI><a href="#[d2]">_lv_ll_get_head</a> from lto-llvm-e2b3d9.o(.text._lv_ll_get_head) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
 <LI><a href="#[d3]">_lv_ll_get_next</a> from lto-llvm-e2b3d9.o(.text._lv_ll_get_next) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
 <LI><a href="#[d1]">_lv_ll_get_prev</a> from lto-llvm-e2b3d9.o(.text._lv_ll_get_prev) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
 <LI><a href="#[d0]">_lv_ll_get_tail</a> from lto-llvm-e2b3d9.o(.text._lv_ll_get_tail) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
 <LI><a href="#[9f]">_out_buffer</a> from lto-llvm-e2b3d9.o(.text._out_buffer) referenced from lto-llvm-e2b3d9.o(.text._vsnprintf)
 <LI><a href="#[9e]">_out_null</a> from lto-llvm-e2b3d9.o(.text._out_null) referenced from lto-llvm-e2b3d9.o(.text._vsnprintf)
 <LI><a href="#[b4]">anim_timer</a> from lto-llvm-e2b3d9.o(.text.anim_timer) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[bb]">bsp_lcd_write_command</a> from lto-llvm-e2b3d9.o(.text.bsp_lcd_write_command) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[bc]">bsp_lcd_write_data</a> from lto-llvm-e2b3d9.o(.text.bsp_lcd_write_data) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[a0]">bsp_lcd_write_ndata</a> from lto-llvm-e2b3d9.o(.text.bsp_lcd_write_ndata) referenced from lto-llvm-e2b3d9.o(.text.bsp_lcd_set_cursor)
 <LI><a href="#[9b]">color_blend_true_color_additive</a> from lto-llvm-e2b3d9.o(.text.color_blend_true_color_additive) referenced from lto-llvm-e2b3d9.o(.text._lv_blend_fill)
 <LI><a href="#[9b]">color_blend_true_color_additive</a> from lto-llvm-e2b3d9.o(.text.color_blend_true_color_additive) referenced from lto-llvm-e2b3d9.o(.text._lv_blend_map)
 <LI><a href="#[9c]">color_blend_true_color_subtractive</a> from lto-llvm-e2b3d9.o(.text.color_blend_true_color_subtractive) referenced from lto-llvm-e2b3d9.o(.text._lv_blend_fill)
 <LI><a href="#[9c]">color_blend_true_color_subtractive</a> from lto-llvm-e2b3d9.o(.text.color_blend_true_color_subtractive) referenced from lto-llvm-e2b3d9.o(.text._lv_blend_map)
 <LI><a href="#[a8]">com_recv</a> from lto-llvm-e2b3d9.o(.text.com_recv) referenced from lto-llvm-e2b3d9.o(.text.com_create)
 <LI><a href="#[a7]">com_send</a> from lto-llvm-e2b3d9.o(.text.com_send) referenced from lto-llvm-e2b3d9.o(.text.com_create)
 <LI><a href="#[e8]">dark_color_filter_cb.459</a> from lto-llvm-e2b3d9.o(.text.dark_color_filter_cb.459) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[bd]">disp_flush</a> from lto-llvm-e2b3d9.o(.text.disp_flush) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[b9]">flex_update</a> from lto-llvm-e2b3d9.o(.text.flex_update) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[e9]">grey_filter_cb.461</a> from lto-llvm-e2b3d9.o(.text.grey_filter_cb.461) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[ba]">grid_update</a> from lto-llvm-e2b3d9.o(.text.grid_update) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[117]">gui_thread</a> from lto-llvm-e2b3d9.o(.text.gui_thread) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[c6]">hex_char_to_num</a> from lto-llvm-e2b3d9.o(.text.hex_char_to_num) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_label)
 <LI><a href="#[cb]">kern_pair_16_compare</a> from lto-llvm-e2b3d9.o(.text.kern_pair_16_compare) referenced from lto-llvm-e2b3d9.o(.text.lv_font_get_glyph_dsc_fmt_txt)
 <LI><a href="#[cc]">kern_pair_8_compare</a> from lto-llvm-e2b3d9.o(.text.kern_pair_8_compare) referenced from lto-llvm-e2b3d9.o(.text.lv_font_get_glyph_dsc_fmt_txt)
 <LI><a href="#[d7]">lv_anim_path_ease_out</a> from lto-llvm-e2b3d9.o(.text.lv_anim_path_ease_out) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by)
 <LI><a href="#[cf]">lv_anim_path_linear</a> from lto-llvm-e2b3d9.o(.text.lv_anim_path_linear) referenced from lto-llvm-e2b3d9.o(.text.lv_label_refr_text)
 <LI><a href="#[cf]">lv_anim_path_linear</a> from lto-llvm-e2b3d9.o(.text.lv_anim_path_linear) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by)
 <LI><a href="#[cf]">lv_anim_path_linear</a> from lto-llvm-e2b3d9.o(.text.lv_anim_path_linear) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[11f]">lv_arc_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_arc_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[120]">lv_arc_event</a> from lto-llvm-e2b3d9.o(.text.lv_arc_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[a2]">lv_area_get_height</a> from lto-llvm-e2b3d9.o(.text.lv_area_get_height) referenced from lto-llvm-e2b3d9.o(.text.children_repos)
 <LI><a href="#[c0]">lv_area_get_height.951</a> from lto-llvm-e2b3d9.o(.text.lv_area_get_height.951) referenced from lto-llvm-e2b3d9.o(.text.lv_bar_event)
 <LI><a href="#[9d]">lv_area_get_size</a> from lto-llvm-e2b3d9.o(.text.lv_area_get_size) referenced from lto-llvm-e2b3d9.o(.text._lv_disp_refr_timer)
 <LI><a href="#[a1]">lv_area_get_width</a> from lto-llvm-e2b3d9.o(.text.lv_area_get_width) referenced from lto-llvm-e2b3d9.o(.text.children_repos)
 <LI><a href="#[bf]">lv_area_get_width.950</a> from lto-llvm-e2b3d9.o(.text.lv_area_get_width.950) referenced from lto-llvm-e2b3d9.o(.text.lv_bar_event)
 <LI><a href="#[a3]">lv_area_set_height</a> from lto-llvm-e2b3d9.o(.text.lv_area_set_height) referenced from lto-llvm-e2b3d9.o(.text.children_repos)
 <LI><a href="#[a4]">lv_area_set_width</a> from lto-llvm-e2b3d9.o(.text.lv_area_set_width) referenced from lto-llvm-e2b3d9.o(.text.children_repos)
 <LI><a href="#[121]">lv_bar_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_bar_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[122]">lv_bar_destructor</a> from lto-llvm-e2b3d9.o(.text.lv_bar_destructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[123]">lv_bar_event</a> from lto-llvm-e2b3d9.o(.text.lv_bar_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[124]">lv_btn_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_btn_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[e2]">lv_disp_dpx</a> from lto-llvm-e2b3d9.o(.text.lv_disp_dpx) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[c3]">lv_draw_mask_angle</a> from lto-llvm-e2b3d9.o(.text.lv_draw_mask_angle) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_arc)
 <LI><a href="#[c4]">lv_draw_mask_free_param</a> from lto-llvm-e2b3d9.o(.text.lv_draw_mask_free_param) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_arc)
 <LI><a href="#[c9]">lv_draw_mask_line</a> from lto-llvm-e2b3d9.o(.text.lv_draw_mask_line) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_mask_line_points_init)
 <LI><a href="#[ca]">lv_draw_mask_radius</a> from lto-llvm-e2b3d9.o(.text.lv_draw_mask_radius) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_mask_radius_init)
 <LI><a href="#[c5]">lv_draw_mask_remove_id</a> from lto-llvm-e2b3d9.o(.text.lv_draw_mask_remove_id) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_arc)
 <LI><a href="#[c5]">lv_draw_mask_remove_id</a> from lto-llvm-e2b3d9.o(.text.lv_draw_mask_remove_id) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_line)
 <LI><a href="#[125]">lv_dropdown_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_dropdown_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[126]">lv_dropdown_destructor</a> from lto-llvm-e2b3d9.o(.text.lv_dropdown_destructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[127]">lv_dropdown_event</a> from lto-llvm-e2b3d9.o(.text.lv_dropdown_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[12a]">lv_dropdown_list_event</a> from lto-llvm-e2b3d9.o(.text.lv_dropdown_list_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[128]">lv_dropdownlist_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_dropdownlist_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[129]">lv_dropdownlist_destructor</a> from lto-llvm-e2b3d9.o(.text.lv_dropdownlist_destructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[dc]">lv_event_send</a> from lto-llvm-e2b3d9.o(.text.lv_event_send) referenced from lto-llvm-e2b3d9.o(.text.lv_refr_obj_and_children)
 <LI><a href="#[11e]">lv_font_get_bitmap_fmt_txt</a> from lto-llvm-e2b3d9.o(.text.lv_font_get_bitmap_fmt_txt) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[11d]">lv_font_get_glyph_dsc_fmt_txt</a> from lto-llvm-e2b3d9.o(.text.lv_font_get_glyph_dsc_fmt_txt) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[c8]">lv_img_buf_get_px_alpha</a> from lto-llvm-e2b3d9.o(.text.lv_img_buf_get_px_alpha) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_map)
 <LI><a href="#[c7]">lv_img_buf_get_px_color</a> from lto-llvm-e2b3d9.o(.text.lv_img_buf_get_px_color) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_map)
 <LI><a href="#[b5]">lv_img_decoder_built_in_close</a> from lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_close) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[b8]">lv_img_decoder_built_in_info</a> from lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_info) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[b7]">lv_img_decoder_built_in_open</a> from lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_open) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[b6]">lv_img_decoder_built_in_read_line</a> from lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_read_line) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[12b]">lv_label_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_label_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[12c]">lv_label_destructor</a> from lto-llvm-e2b3d9.o(.text.lv_label_destructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[12d]">lv_label_event</a> from lto-llvm-e2b3d9.o(.text.lv_label_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[12e]">lv_line_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_line_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[12f]">lv_line_event</a> from lto-llvm-e2b3d9.o(.text.lv_line_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[b2]">lv_mem_buf_release</a> from lto-llvm-e2b3d9.o(.text.lv_mem_buf_release) referenced from lto-llvm-e2b3d9.o(.text.grid_update)
 <LI><a href="#[118]">lv_obj_add_style</a> from lto-llvm-e2b3d9.o(.text.lv_obj_add_style) referenced from lto-llvm-e2b3d9.o(.text.theme_apply.455)
 <LI><a href="#[119]">lv_obj_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_obj_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[c2]">lv_obj_create</a> from lto-llvm-e2b3d9.o(.text.lv_obj_create) referenced from lto-llvm-e2b3d9.o(.text.lv_disp_drv_register)
 <LI><a href="#[11a]">lv_obj_destructor</a> from lto-llvm-e2b3d9.o(.text.lv_obj_destructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[11b]">lv_obj_event</a> from lto-llvm-e2b3d9.o(.text.lv_obj_event) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[af]">lv_obj_get_height</a> from lto-llvm-e2b3d9.o(.text.lv_obj_get_height) referenced from lto-llvm-e2b3d9.o(.text.find_track_end)
 <LI><a href="#[b0]">lv_obj_get_style_prop</a> from lto-llvm-e2b3d9.o(.text.lv_obj_get_style_prop) referenced from lto-llvm-e2b3d9.o(.text.flex_update)
 <LI><a href="#[b0]">lv_obj_get_style_prop</a> from lto-llvm-e2b3d9.o(.text.lv_obj_get_style_prop) referenced from lto-llvm-e2b3d9.o(.text.grid_update)
 <LI><a href="#[b0]">lv_obj_get_style_prop</a> from lto-llvm-e2b3d9.o(.text.lv_obj_get_style_prop) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_init_draw_rect_dsc)
 <LI><a href="#[ae]">lv_obj_get_width</a> from lto-llvm-e2b3d9.o(.text.lv_obj_get_width) referenced from lto-llvm-e2b3d9.o(.text.find_track_end)
 <LI><a href="#[eb]">lv_obj_set_local_style_prop</a> from lto-llvm-e2b3d9.o(.text.lv_obj_set_local_style_prop) referenced from lto-llvm-e2b3d9.o(.text.lv_win_constructor)
 <LI><a href="#[db]">lv_refr_obj_and_children</a> from lto-llvm-e2b3d9.o(.text.lv_refr_obj_and_children) referenced from lto-llvm-e2b3d9.o(.text.lv_refr_area_part)
 <LI><a href="#[e0]">lv_style_set_bg_color</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_bg_color) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[e4]">lv_style_set_bg_opa</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_bg_opa) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[ea]">lv_style_set_pad_all.457</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_pad_all.457) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[e6]">lv_style_set_pad_column</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_pad_column) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[e7]">lv_style_set_pad_row</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_pad_row) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[e3]">lv_style_set_prop</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_prop) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[e1]">lv_style_set_radius</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_radius) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[e5]">lv_style_set_text_color</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_text_color) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[df]">lv_style_set_transition</a> from lto-llvm-e2b3d9.o(.text.lv_style_set_transition) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[be]">lv_trigo_sin</a> from lto-llvm-e2b3d9.o(.text.lv_trigo_sin) referenced from lto-llvm-e2b3d9.o(.text.inv_arc_area)
 <LI><a href="#[be]">lv_trigo_sin</a> from lto-llvm-e2b3d9.o(.text.lv_trigo_sin) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_arc)
 <LI><a href="#[be]">lv_trigo_sin</a> from lto-llvm-e2b3d9.o(.text.lv_trigo_sin) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_img)
 <LI><a href="#[be]">lv_trigo_sin</a> from lto-llvm-e2b3d9.o(.text.lv_trigo_sin) referenced from lto-llvm-e2b3d9.o(.text.lv_draw_map)
 <LI><a href="#[11c]">lv_win_constructor</a> from lto-llvm-e2b3d9.o(.text.lv_win_constructor) referenced from lto-llvm-e2b3d9.o(.rodata)
 <LI><a href="#[b3]">lvgl_log_output</a> from lto-llvm-e2b3d9.o(.text.lvgl_log_output) referenced from lto-llvm-e2b3d9.o(.text.gui_thread)
 <LI><a href="#[10b]">memory_pool</a> from lto-llvm-e2b3d9.o(.text.memory_pool) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[10a]">osMutexNew</a> from rtx_mutex.o(.text.osMutexNew) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[f8]">osRtxIdleThread</a> from lto-llvm-e2b3d9.o(.text.osRtxIdleThread) referenced from rtx_thread.o(.text.osRtxThreadStartup)
 <LI><a href="#[106]">osRtxMemoryInit</a> from rtx_memory.o(.text.osRtxMemoryInit) referenced from rtx_kernel.o(.text.svcRtxKernelInitialize)
 <LI><a href="#[107]">osRtxSemaphorePostProcess</a> from rtx_semaphore.o(.text.osRtxSemaphorePostProcess) referenced from rtx_semaphore.o(.text.svcRtxSemaphoreNew)
 <LI><a href="#[109]">osRtxThreadPostProcess</a> from rtx_thread.o(.text.osRtxThreadPostProcess) referenced from rtx_thread.o(.text.svcRtxThreadNew)
 <LI><a href="#[108]">osThreadExit</a> from rtx_thread.o(.text.osThreadExit) referenced from rtx_thread.o(.text.svcRtxThreadNew)
 <LI><a href="#[10e]">rte_calloc</a> from lto-llvm-e2b3d9.o(.text.rte_calloc) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[112]">rte_data_out</a> from lto-llvm-e2b3d9.o(.text.rte_data_out) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[10c]">rte_free</a> from lto-llvm-e2b3d9.o(.text.rte_free) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[110]">rte_get_tick</a> from lto-llvm-e2b3d9.o(.text.rte_get_tick) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[10f]">rte_malloc</a> from lto-llvm-e2b3d9.o(.text.rte_malloc) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[a6]">rte_mutex_lock</a> from lto-llvm-e2b3d9.o(.text.rte_mutex_lock) referenced from lto-llvm-e2b3d9.o(.text.com_create)
 <LI><a href="#[a6]">rte_mutex_lock</a> from lto-llvm-e2b3d9.o(.text.rte_mutex_lock) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[a5]">rte_mutex_unlock</a> from lto-llvm-e2b3d9.o(.text.rte_mutex_unlock) referenced from lto-llvm-e2b3d9.o(.text.com_create)
 <LI><a href="#[a5]">rte_mutex_unlock</a> from lto-llvm-e2b3d9.o(.text.rte_mutex_unlock) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[10d]">rte_realloc</a> from lto-llvm-e2b3d9.o(.text.rte_realloc) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[113]">running_timer</a> from lto-llvm-e2b3d9.o(.text.running_timer) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[d6]">scroll_anim_ready_cb</a> from lto-llvm-e2b3d9.o(.text.scroll_anim_ready_cb) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by)
 <LI><a href="#[d5]">scroll_x_anim</a> from lto-llvm-e2b3d9.o(.text.scroll_x_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_event)
 <LI><a href="#[d5]">scroll_x_anim</a> from lto-llvm-e2b3d9.o(.text.scroll_x_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_scroll_to_x)
 <LI><a href="#[d4]">scroll_y_anim</a> from lto-llvm-e2b3d9.o(.text.scroll_y_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_event)
 <LI><a href="#[d4]">scroll_y_anim</a> from lto-llvm-e2b3d9.o(.text.scroll_y_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_scroll_to_y)
 <LI><a href="#[cd]">set_ofs_x_anim</a> from lto-llvm-e2b3d9.o(.text.set_ofs_x_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_label_constructor)
 <LI><a href="#[cd]">set_ofs_x_anim</a> from lto-llvm-e2b3d9.o(.text.set_ofs_x_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_label_refr_text)
 <LI><a href="#[ce]">set_ofs_y_anim</a> from lto-llvm-e2b3d9.o(.text.set_ofs_y_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_label_constructor)
 <LI><a href="#[ce]">set_ofs_y_anim</a> from lto-llvm-e2b3d9.o(.text.set_ofs_y_anim) referenced from lto-llvm-e2b3d9.o(.text.lv_label_refr_text)
 <LI><a href="#[136]">shellBackspace</a> from lto-llvm-e2b3d9.o(.text.shellBackspace) referenced 2 times from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[13e]">shellClear</a> from lto-llvm-e2b3d9.o(.text.shellClear) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[13b]">shellCmds</a> from lto-llvm-e2b3d9.o(.text.shellCmds) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[137]">shellDelete</a> from lto-llvm-e2b3d9.o(.text.shellDelete) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[132]">shellDown</a> from lto-llvm-e2b3d9.o(.text.shellDown) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[138]">shellEnter</a> from lto-llvm-e2b3d9.o(.text.shellEnter) referenced 2 times from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[139]">shellHelp</a> from lto-llvm-e2b3d9.o(.text.shellHelp) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[13d]">shellKeys</a> from lto-llvm-e2b3d9.o(.text.shellKeys) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[134]">shellLeft</a> from lto-llvm-e2b3d9.o(.text.shellLeft) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[133]">shellRight</a> from lto-llvm-e2b3d9.o(.text.shellRight) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[130]">shellSetVar</a> from lto-llvm-e2b3d9.o(.text.shellSetVar) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[135]">shellTab</a> from lto-llvm-e2b3d9.o(.text.shellTab) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[116]">shellTask</a> from lto-llvm-e2b3d9.o(.text.shellTask) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[131]">shellUp</a> from lto-llvm-e2b3d9.o(.text.shellUp) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[13a]">shellUsers</a> from lto-llvm-e2b3d9.o(.text.shellUsers) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[13c]">shellVars</a> from lto-llvm-e2b3d9.o(.text.shellVars) referenced from lto-llvm-e2b3d9.o(shellCommand)
 <LI><a href="#[ff]">shellWriteString</a> from lto-llvm-e2b3d9.o(.text.shellWriteString) referenced from lto-llvm-e2b3d9.o(.text.shellShowVar)
 <LI><a href="#[ff]">shellWriteString</a> from lto-llvm-e2b3d9.o(.text.shellWriteString) referenced from lto-llvm-e2b3d9.o(.text.shellWritePrompt)
 <LI><a href="#[ff]">shellWriteString</a> from lto-llvm-e2b3d9.o(.text.shellWriteString) referenced from lto-llvm-e2b3d9.o(.text.shellWriteReturnValue)
 <LI><a href="#[111]">single_timer_free_cb</a> from lto-llvm-e2b3d9.o(.text.single_timer_free_cb) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[101]">spi_recv</a> from lto-llvm-e2b3d9.o(.text.spi_recv) referenced from lto-llvm-e2b3d9.o(.text.spi_create)
 <LI><a href="#[100]">spi_send</a> from lto-llvm-e2b3d9.o(.text.spi_send) referenced from lto-llvm-e2b3d9.o(.text.spi_create)
 <LI><a href="#[102]">spi_send_async</a> from lto-llvm-e2b3d9.o(.text.spi_send_async) referenced from lto-llvm-e2b3d9.o(.text.spi_create)
 <LI><a href="#[de]">style_init_reset.456</a> from lto-llvm-e2b3d9.o(.text.style_init_reset.456) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[ef]">svcRtxDelay</a> from rtx_delay.o(.text.svcRtxDelay) referenced from rtx_delay.o(.text.osDelay)
 <LI><a href="#[f0]">svcRtxKernelGetState</a> from rtx_kernel.o(.text.svcRtxKernelGetState) referenced from rtx_kernel.o(.text.osKernelGetState)
 <LI><a href="#[f1]">svcRtxKernelGetTickCount</a> from rtx_kernel.o(.text.svcRtxKernelGetTickCount) referenced from rtx_kernel.o(.text.osKernelGetTickCount)
 <LI><a href="#[f2]">svcRtxKernelInitialize</a> from rtx_kernel.o(.text.svcRtxKernelInitialize) referenced from rtx_kernel.o(.text.osKernelInitialize)
 <LI><a href="#[f3]">svcRtxKernelStart</a> from rtx_kernel.o(.text.svcRtxKernelStart) referenced from rtx_kernel.o(.text.osKernelStart)
 <LI><a href="#[f4]">svcRtxMutexAcquire</a> from rtx_mutex.o(.text.svcRtxMutexAcquire) referenced from rtx_mutex.o(.text.osMutexAcquire)
 <LI><a href="#[f5]">svcRtxMutexDelete</a> from rtx_mutex.o(.text.svcRtxMutexDelete) referenced from rtx_mutex.o(.text.osMutexDelete)
 <LI><a href="#[f6]">svcRtxMutexNew</a> from rtx_mutex.o(.text.svcRtxMutexNew) referenced from rtx_mutex.o(.text.osMutexNew)
 <LI><a href="#[f7]">svcRtxMutexRelease</a> from rtx_mutex.o(.text.svcRtxMutexRelease) referenced from rtx_mutex.o(.text.osMutexRelease)
 <LI><a href="#[f9]">svcRtxSemaphoreAcquire</a> from rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) referenced from rtx_semaphore.o(.text.osSemaphoreAcquire)
 <LI><a href="#[fa]">svcRtxSemaphoreNew</a> from rtx_semaphore.o(.text.svcRtxSemaphoreNew) referenced from rtx_semaphore.o(.text.osSemaphoreNew)
 <LI><a href="#[fb]">svcRtxSemaphoreRelease</a> from rtx_semaphore.o(.text.svcRtxSemaphoreRelease) referenced from rtx_semaphore.o(.text.osSemaphoreRelease)
 <LI><a href="#[fc]">svcRtxThreadExit</a> from rtx_thread.o(.text.svcRtxThreadExit) referenced from rtx_thread.o(.text.osThreadExit)
 <LI><a href="#[fd]">svcRtxThreadNew</a> from rtx_thread.o(.text.svcRtxThreadNew) referenced from rtx_thread.o(.text.osThreadNew)
 <LI><a href="#[fe]">svcRtxThreadSetPriority</a> from rtx_thread.o(.text.svcRtxThreadSetPriority) referenced from rtx_thread.o(.text.osThreadSetPriority)
 <LI><a href="#[ee]">system_thread</a> from lto-llvm-e2b3d9.o(.text.system_thread) referenced from lto-llvm-e2b3d9.o(.text.main)
 <LI><a href="#[dd]">theme_apply.455</a> from lto-llvm-e2b3d9.o(.text.theme_apply.455) referenced from lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
 <LI><a href="#[da]">trans_anim_cb</a> from lto-llvm-e2b3d9.o(.text.trans_anim_cb) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_set_state)
 <LI><a href="#[d8]">trans_anim_ready_cb</a> from lto-llvm-e2b3d9.o(.text.trans_anim_ready_cb) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_set_state)
 <LI><a href="#[d9]">trans_anim_start_cb</a> from lto-llvm-e2b3d9.o(.text.trans_anim_start_cb) referenced from lto-llvm-e2b3d9.o(.text.lv_obj_set_state)
 <LI><a href="#[b1]">unicode_list_compare</a> from lto-llvm-e2b3d9.o(.text.unicode_list_compare) referenced from lto-llvm-e2b3d9.o(.text.get_glyph_dsc_id)
 <LI><a href="#[114]">userShellRead</a> from lto-llvm-e2b3d9.o(.text.userShellRead) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
 <LI><a href="#[115]">userShellWrite</a> from lto-llvm-e2b3d9.o(.text.userShellWrite) referenced from lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[96]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(.text)
</UL>
<P><STRONG><a name="[143]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[145]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[402]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[403]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[404]"></a>__decompress</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(!!dczerorl), UNUSED)

<P><STRONG><a name="[405]"></a>__decompress0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(!!dczerorl), UNUSED)

<P><STRONG><a name="[146]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[406]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[14e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[147]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[407]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[408]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[409]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[40a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[40b]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[40c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[40d]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[40e]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[40f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[410]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[411]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[412]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[413]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[414]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[415]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[416]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[417]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[418]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[419]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[41a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[153]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[41b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[41c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[41d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[41e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[41f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[420]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[421]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[144]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[422]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[149]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[14b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_postsh_1 &rArr; _platform_post_stackheap_init &rArr; osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
</UL>

<P><STRONG><a name="[14d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[14f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; OUTLINED_FUNCTION_89 &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[423]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[160]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[152]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[424]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[154]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h743xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[15f]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h743xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 154 bytes, Stack size unknown bytes, irq_armv7m.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, irq_armv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = PendSV_Handler &rArr; osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, irq_armv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = SysTick_Handler &rArr; osRtxTick_Handler &rArr; osRtxThreadDelayTick &rArr; osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup_stm32h743xx.o(RESET)
<LI> rtx_kernel.o(.text.svcRtxKernelStart)
</UL>
<P><STRONG><a name="[2cc]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
</UL>

<P><STRONG><a name="[2f1]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[235]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_log_output
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_131
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[158]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[425]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_calloc
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[426]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_103
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[427]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[428]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[15c]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_snprintf
</UL>

<P><STRONG><a name="[2ca]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7m_pel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetUser
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_control
</UL>

<P><STRONG><a name="[429]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[42a]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[42b]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL>

<P><STRONG><a name="[42c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[42d]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[42e]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[151]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[42f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[155]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[430]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[431]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[432]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[433]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[3fc]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
</UL>

<P><STRONG><a name="[161]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
</UL>

<P><STRONG><a name="[434]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[2cb]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_control
</UL>

<P><STRONG><a name="[435]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[163]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[436]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_156
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_143
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.DMA1_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.DMA1_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Stream1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[3cd]"></a>OS_Tick_AcknowledgeIRQ</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, os_systick.o(.text.OS_Tick_AcknowledgeIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3f6]"></a>OS_Tick_Enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, os_systick.o(.text.OS_Tick_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3f5]"></a>OS_Tick_GetIRQn</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_systick.o(.text.OS_Tick_GetIRQn))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3f4]"></a>OS_Tick_Setup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, os_systick.o(.text.OS_Tick_Setup))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.SPI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI2_IRQHandler &rArr; HAL_SPI_IRQHandler &rArr; HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; SemaphoreTokenIncrement
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>SystemInit</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART1_IRQHandler &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h743xx.o(RESET)
</UL>
<P><STRONG><a name="[13f]"></a>_mutex_acquire</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text._mutex_acquire), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _mutex_acquire &rArr; os_kernel_is_active
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>

<P><STRONG><a name="[140]"></a>_mutex_free</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._mutex_free), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
</UL>

<P><STRONG><a name="[141]"></a>_mutex_initialize</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text._mutex_initialize), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _mutex_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>

<P><STRONG><a name="[142]"></a>_mutex_release</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text._mutex_release), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _mutex_release &rArr; os_kernel_is_active
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>

<P><STRONG><a name="[14c]"></a>_platform_post_stackheap_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._platform_post_stackheap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _platform_post_stackheap_init &rArr; osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_postsh_1
</UL>

<P><STRONG><a name="[150]"></a>main</STRONG> (Thumb, 3344 bytes, Stack size 216 bytes, lto-llvm-e2b3d9.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = main &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; OUTLINED_FUNCTION_89 &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_81
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_69
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_60
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_48
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_185
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[2ae]"></a>osDelay</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_delay.o(.text.osDelay))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[3d1]"></a>osKernelGetState</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtx_kernel.o(.text.osKernelGetState), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_kernel_is_active
</UL>

<P><STRONG><a name="[16c]"></a>osKernelGetTickCount</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_kernel.o(.text.osKernelGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTask
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_get_tick
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_time_remaining
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[244]"></a>osKernelInitialize</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_kernel.o(.text.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelPreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_platform_post_stackheap_init
</UL>

<P><STRONG><a name="[3b0]"></a>osKernelStart</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_kernel.o(.text.osKernelStart))
<BR><BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23c]"></a>osMutexAcquire</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_mutex.o(.text.osMutexAcquire))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_mutex_lock
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>

<P><STRONG><a name="[23d]"></a>osMutexDelete</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_mutex.o(.text.osMutexDelete), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_free
</UL>

<P><STRONG><a name="[10a]"></a>osMutexNew</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_mutex.o(.text.osMutexNew))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_create
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[23f]"></a>osMutexRelease</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_mutex.o(.text.osMutexRelease))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_mutex_unlock
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
</UL>

<P><STRONG><a name="[3b5]"></a>osRtxErrorNotify</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.osRtxErrorNotify))
<BR><BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
</UL>

<P><STRONG><a name="[f8]"></a>osRtxIdleThread</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.osRtxIdleThread))
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxIdleThread
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxIdleThread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text.osRtxThreadStartup)
</UL>
<P><STRONG><a name="[23e]"></a>osRtxKernelErrorNotify</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_kernel.o(.text.osRtxKernelErrorNotify))
<BR><BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxErrorNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_initialize
</UL>

<P><STRONG><a name="[3b3]"></a>osRtxKernelPreInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_kernel.o(.text.osRtxKernelPreInit))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
</UL>

<P><STRONG><a name="[3f8]"></a>osRtxMemoryAlloc</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, rtx_memory.o(.text.osRtxMemoryAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = osRtxMemoryAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreNew
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[3c4]"></a>osRtxMemoryFree</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rtx_memory.o(.text.osRtxMemoryFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
</UL>

<P><STRONG><a name="[106]"></a>osRtxMemoryInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, rtx_memory.o(.text.osRtxMemoryInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxMemoryInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text.svcRtxKernelInitialize)
</UL>
<P><STRONG><a name="[3f7]"></a>osRtxMemoryPoolAlloc</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rtx_mempool.o(.text.osRtxMemoryPoolAlloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxMemoryPoolAlloc
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreNew
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexNew
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>

<P><STRONG><a name="[3c5]"></a>osRtxMemoryPoolFree</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rtx_mempool.o(.text.osRtxMemoryPoolFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryPoolFree
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
</UL>

<P><STRONG><a name="[198]"></a>osRtxMemoryPoolInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtx_mempool.o(.text.osRtxMemoryPoolInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxMemoryPoolInit
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[3b6]"></a>osRtxMutexOwnerRelease</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, rtx_mutex.o(.text.osRtxMutexOwnerRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3b9]"></a>osRtxMutexOwnerRestore</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rtx_mutex.o(.text.osRtxMutexOwnerRestore))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[156]"></a>osRtxPendSV_Handler</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, rtx_system.o(.text.osRtxPendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxPendSV_Handler &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[3bc]"></a>osRtxPostProcess</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rtx_system.o(.text.osRtxPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxPostProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxKernelErrorNotify
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[3bd]"></a>osRtxThreadDelayTick</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, rtx_thread.o(.text.osRtxThreadDelayTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = osRtxThreadDelayTick &rArr; osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRestore
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRoot
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3bb]"></a>osRtxThreadDispatch</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rtx_thread.o(.text.osRtxThreadDispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPendSV_Handler
</UL>

<P><STRONG><a name="[3b7]"></a>osRtxThreadListGet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadListGet))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSemaphorePostProcess
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
</UL>

<P><STRONG><a name="[3c7]"></a>osRtxThreadListPut</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, rtx_thread.o(.text.osRtxThreadListPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
</UL>

<P><STRONG><a name="[3bf]"></a>osRtxThreadListRemove</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3ba]"></a>osRtxThreadListSort</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, rtx_thread.o(.text.osRtxThreadListSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRestore
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadSetPriority
</UL>

<P><STRONG><a name="[3c0]"></a>osRtxThreadReadyPut</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadReadyPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3c9]"></a>osRtxThreadStartup</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, rtx_thread.o(.text.osRtxThreadStartup))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = osRtxThreadStartup &rArr; svcRtxThreadNew &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
</UL>

<P><STRONG><a name="[3ce]"></a>osRtxThreadSwitch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelStart
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxTick_Handler
</UL>

<P><STRONG><a name="[3ca]"></a>osRtxThreadWaitEnter</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rtx_thread.o(.text.osRtxThreadWaitEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreAcquire
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexAcquire
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxDelay
</UL>

<P><STRONG><a name="[3b8]"></a>osRtxThreadWaitExit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, rtx_thread.o(.text.osRtxThreadWaitExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayRemove
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxSemaphorePostProcess
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexRelease
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxMutexDelete
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
</UL>

<P><STRONG><a name="[157]"></a>osRtxTick_Handler</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, rtx_system.o(.text.osRtxTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osRtxTick_Handler &rArr; osRtxThreadDelayTick &rArr; osRtxMutexOwnerRestore &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadReadyPut
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRemove
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_AcknowledgeIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1e2]"></a>osSemaphoreAcquire</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, rtx_semaphore.o(.text.osSemaphoreAcquire))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_195
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_async
</UL>

<P><STRONG><a name="[279]"></a>osSemaphoreNew</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_semaphore.o(.text.osSemaphoreNew))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_create
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_create
</UL>

<P><STRONG><a name="[18f]"></a>osSemaphoreRelease</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, rtx_semaphore.o(.text.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osSemaphoreRelease &rArr; SemaphoreTokenIncrement
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenIncrement
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxPostProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv_callback
</UL>

<P><STRONG><a name="[108]"></a>osThreadExit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtx_thread.o(.text.osThreadExit))
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text.svcRtxThreadNew)
</UL>
<P><STRONG><a name="[3ae]"></a>osThreadNew</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_thread.o(.text.osThreadNew))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3af]"></a>osThreadSetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_thread.o(.text.osThreadSetPriority))
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[148]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[437]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[438]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[197]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_kernel.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; osRtxMemoryPoolInit
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxKernelInitialize
</UL>

<P><STRONG><a name="[3b4]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_kernel.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[f0]"></a>svcRtxKernelGetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtx_kernel.o(.text.svcRtxKernelGetState))
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text.osKernelGetState)
</UL>
<P><STRONG><a name="[f1]"></a>svcRtxKernelGetTickCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtx_kernel.o(.text.svcRtxKernelGetTickCount))
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text.osKernelGetTickCount)
</UL>
<P><STRONG><a name="[f2]"></a>svcRtxKernelInitialize</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, rtx_kernel.o(.text.svcRtxKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxKernelInitialize &rArr; OUTLINED_FUNCTION_0 &rArr; osRtxMemoryPoolInit
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryInit
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text.osKernelInitialize)
</UL>
<P><STRONG><a name="[f3]"></a>svcRtxKernelStart</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, rtx_kernel.o(.text.svcRtxKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = svcRtxKernelStart &rArr; osRtxThreadStartup &rArr; svcRtxThreadNew &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadSwitch
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStartup
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Setup
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_GetIRQn
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Tick_Enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_kernel.o(.text.osKernelStart)
</UL>
<P><STRONG><a name="[3d0]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtx_thread.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
</UL>

<P><STRONG><a name="[3c8]"></a>ThreadFlagsCheck</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rtx_thread.o(.text.ThreadFlagsCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ThreadFlagsCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadPostProcess
</UL>

<P><STRONG><a name="[3c3]"></a>osRtxThreadBlock</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rtx_thread.o(.text.osRtxThreadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osRtxThreadBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>

<P><STRONG><a name="[3cb]"></a>osRtxThreadDelayInsert</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, rtx_thread.o(.text.osRtxThreadDelayInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osRtxThreadDelayInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>

<P><STRONG><a name="[3cc]"></a>osRtxThreadDelayRemove</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadDelayRemove))
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
</UL>

<P><STRONG><a name="[3c1]"></a>osRtxThreadDestroy</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadDestroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxThreadDestroy &rArr; osRtxThreadFree &rArr; osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadFree
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3c2]"></a>osRtxThreadFree</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, rtx_thread.o(.text.osRtxThreadFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = osRtxThreadFree &rArr; osRtxMemoryPoolFree
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
</UL>

<P><STRONG><a name="[3c6]"></a>osRtxThreadJoinWakeup</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rtx_thread.o(.text.osRtxThreadJoinWakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osRtxThreadJoinWakeup &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxThreadExit
</UL>

<P><STRONG><a name="[3be]"></a>osRtxThreadListRoot</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtx_thread.o(.text.osRtxThreadListRoot))
<BR><BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRoot
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListRoot
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDelayTick
</UL>

<P><STRONG><a name="[109]"></a>osRtxThreadPostProcess</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtx_thread.o(.text.osRtxThreadPostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osRtxThreadPostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ThreadFlagsCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text.svcRtxThreadNew)
</UL>
<P><STRONG><a name="[fc]"></a>svcRtxThreadExit</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, rtx_thread.o(.text.svcRtxThreadExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = svcRtxThreadExit &rArr; osRtxMutexOwnerRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMutexOwnerRelease
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadJoinWakeup
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDestroy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text.osThreadExit)
</UL>
<P><STRONG><a name="[fd]"></a>svcRtxThreadNew</STRONG> (Thumb, 472 bytes, Stack size 48 bytes, rtx_thread.o(.text.svcRtxThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = svcRtxThreadNew &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadStartup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text.osThreadNew)
</UL>
<P><STRONG><a name="[fe]"></a>svcRtxThreadSetPriority</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, rtx_thread.o(.text.svcRtxThreadSetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = svcRtxThreadSetPriority &rArr; osRtxThreadListSort &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_thread.o(.text.osThreadSetPriority)
</UL>
<P><STRONG><a name="[ef]"></a>svcRtxDelay</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtx_delay.o(.text.svcRtxDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = svcRtxDelay &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_delay.o(.text.osDelay)
</UL>
<P><STRONG><a name="[f4]"></a>svcRtxMutexAcquire</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, rtx_mutex.o(.text.svcRtxMutexAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = svcRtxMutexAcquire &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text.osMutexAcquire)
</UL>
<P><STRONG><a name="[f5]"></a>svcRtxMutexDelete</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, rtx_mutex.o(.text.svcRtxMutexDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxMutexDelete &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListSort
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolFree
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryFree
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text.osMutexDelete)
</UL>
<P><STRONG><a name="[f6]"></a>svcRtxMutexNew</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rtx_mutex.o(.text.svcRtxMutexNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = svcRtxMutexNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text.osMutexNew)
</UL>
<P><STRONG><a name="[f7]"></a>svcRtxMutexRelease</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, rtx_mutex.o(.text.svcRtxMutexRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = svcRtxMutexRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadDispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_mutex.o(.text.osMutexRelease)
</UL>
<P><STRONG><a name="[3cf]"></a>SemaphoreTokenIncrement</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtx_semaphore.o(.text.SemaphoreTokenIncrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SemaphoreTokenIncrement
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svcRtxSemaphoreRelease
</UL>

<P><STRONG><a name="[107]"></a>osRtxSemaphorePostProcess</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, rtx_semaphore.o(.text.osRtxSemaphorePostProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = osRtxSemaphorePostProcess &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(.text.svcRtxSemaphoreNew)
</UL>
<P><STRONG><a name="[f9]"></a>svcRtxSemaphoreAcquire</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rtx_semaphore.o(.text.svcRtxSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = svcRtxSemaphoreAcquire &rArr; osRtxThreadWaitEnter &rArr; osRtxThreadDelayInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitEnter
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListPut
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(.text.osSemaphoreAcquire)
</UL>
<P><STRONG><a name="[fa]"></a>svcRtxSemaphoreNew</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, rtx_semaphore.o(.text.svcRtxSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = svcRtxSemaphoreNew &rArr; osRtxMemoryAlloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryPoolAlloc
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxMemoryAlloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(.text.osSemaphoreNew)
</UL>
<P><STRONG><a name="[fb]"></a>svcRtxSemaphoreRelease</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rtx_semaphore.o(.text.svcRtxSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = svcRtxSemaphoreRelease &rArr; osRtxThreadWaitExit &rArr; osRtxThreadDispatch &rArr; osRtxThreadReadyPut &rArr; osRtxThreadListPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SemaphoreTokenIncrement
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadWaitExit
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osRtxThreadListGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtx_semaphore.o(.text.osSemaphoreRelease)
</UL>
<P><STRONG><a name="[16b]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.DMA_CalcBaseAndBitshift))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[3b1]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[167]"></a>HAL_DMA_Abort</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>

<P><STRONG><a name="[18a]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[166]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 1260 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_88
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[16a]"></a>HAL_DMA_Init</STRONG> (Thumb, 1076 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27b]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 896 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_async
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv
</UL>

<P><STRONG><a name="[ed]"></a>HAL_GPIO_Init</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.main)
</UL>
<P><STRONG><a name="[168]"></a>HAL_GetTick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.HAL_GetTick))
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_150
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_send
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16d]"></a>HAL_InitTick</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.HAL_MPU_ConfigRegion))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.main)
</UL>
<P><STRONG><a name="[16e]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16f]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCCEx_GetPLL2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_79
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[175]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCCEx_GetPLL3ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_79
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_55
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_42
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_41
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[176]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1864 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; OUTLINED_FUNCTION_89 &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_89
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_68
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_57
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_225
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_193
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_154
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_146
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[184]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[186]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_205
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[188]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_205
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[185]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[189]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 520 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.HAL_SPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_SPI_IRQHandler &rArr; HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; SemaphoreTokenIncrement
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_249
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_145
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
</UL>

<P><STRONG><a name="[18e]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_SPI_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; SemaphoreTokenIncrement
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[190]"></a>HAL_UART_DMAStop</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_UART_DMAStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_215
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv_callback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv
</UL>

<P><STRONG><a name="[194]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_215
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[195]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
</UL>

<P><STRONG><a name="[199]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block.882
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split.898
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next.865
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next.914
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert.878
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb.913
</UL>

<P><STRONG><a name="[19b]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>

<P><STRONG><a name="[172]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
</UL>

<P><STRONG><a name="[19c]"></a>OUTLINED_FUNCTION_100</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_100))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_100 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[19d]"></a>OUTLINED_FUNCTION_101</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_101))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[19e]"></a>OUTLINED_FUNCTION_102</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_102))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_102 &rArr; _lv_area_intersect
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[1a0]"></a>OUTLINED_FUNCTION_103</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_103))
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[24a]"></a>OUTLINED_FUNCTION_104</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_104))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[3f1]"></a>OUTLINED_FUNCTION_105</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_105))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[2d4]"></a>OUTLINED_FUNCTION_106</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_106))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[1a2]"></a>OUTLINED_FUNCTION_107</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_107))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_107 &rArr; lv_obj_get_style_pad_bottom.943 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.943
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[1a4]"></a>OUTLINED_FUNCTION_108</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_108))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_108 &rArr; lv_obj_get_style_pad_right.941 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.941
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[1a6]"></a>OUTLINED_FUNCTION_109</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_109))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListItem
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellVars
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUsers
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellKeys
</UL>

<P><STRONG><a name="[1a8]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_11 &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[320]"></a>OUTLINED_FUNCTION_110</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_110))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[3ed]"></a>OUTLINED_FUNCTION_111</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_111))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[3ee]"></a>OUTLINED_FUNCTION_112</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_112))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[337]"></a>OUTLINED_FUNCTION_113</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_113))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[1aa]"></a>OUTLINED_FUNCTION_114</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_114))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_114
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[338]"></a>OUTLINED_FUNCTION_115</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_115))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[1ac]"></a>OUTLINED_FUNCTION_116</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_116))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OUTLINED_FUNCTION_116 &rArr; lv_draw_mask_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[1ae]"></a>OUTLINED_FUNCTION_117</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_117))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OUTLINED_FUNCTION_117 &rArr; lv_draw_mask_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[1af]"></a>OUTLINED_FUNCTION_118</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_118))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_118 &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
</UL>

<P><STRONG><a name="[2bd]"></a>OUTLINED_FUNCTION_119</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_119))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[179]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_12 &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[328]"></a>OUTLINED_FUNCTION_120</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_120))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[1b2]"></a>OUTLINED_FUNCTION_121</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_121))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_121 &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_subtractive
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_additive
</UL>

<P><STRONG><a name="[3e4]"></a>OUTLINED_FUNCTION_122</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_122))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellVars
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUsers
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellKeys
</UL>

<P><STRONG><a name="[3e3]"></a>OUTLINED_FUNCTION_123</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_123))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellVars
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUsers
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellKeys
</UL>

<P><STRONG><a name="[3a0]"></a>OUTLINED_FUNCTION_124</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_124))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[3a1]"></a>OUTLINED_FUNCTION_125</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_125))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[3e8]"></a>OUTLINED_FUNCTION_126</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_126))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[3e9]"></a>OUTLINED_FUNCTION_127</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_127))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_async
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[304]"></a>OUTLINED_FUNCTION_128</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_128))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[1b3]"></a>OUTLINED_FUNCTION_129</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_129))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OUTLINED_FUNCTION_129 &rArr; lv_draw_mask_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2de]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix.403
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>

<P><STRONG><a name="[1b4]"></a>OUTLINED_FUNCTION_130</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_130))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OUTLINED_FUNCTION_130 &rArr; lv_draw_mask_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[1b5]"></a>OUTLINED_FUNCTION_131</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_131))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2fe]"></a>OUTLINED_FUNCTION_132</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_132))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[1b6]"></a>OUTLINED_FUNCTION_133</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_133))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_133 &rArr; _lv_blend_fill &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[224]"></a>OUTLINED_FUNCTION_134</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_134))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[1b8]"></a>OUTLINED_FUNCTION_135</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_135))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[2ea]"></a>OUTLINED_FUNCTION_136</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_136))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[1b9]"></a>OUTLINED_FUNCTION_137</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_137))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = OUTLINED_FUNCTION_137 &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
</UL>

<P><STRONG><a name="[2e8]"></a>OUTLINED_FUNCTION_138</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_138))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[2ec]"></a>OUTLINED_FUNCTION_139</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_139))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[182]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_14 &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[24c]"></a>OUTLINED_FUNCTION_140</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_140))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[33e]"></a>OUTLINED_FUNCTION_141</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_141))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[339]"></a>OUTLINED_FUNCTION_142</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_142))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[1bb]"></a>OUTLINED_FUNCTION_143</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_143))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OUTLINED_FUNCTION_143 &rArr; __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[1bc]"></a>OUTLINED_FUNCTION_144</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_144))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = OUTLINED_FUNCTION_144 &rArr; find_track_end &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[18d]"></a>OUTLINED_FUNCTION_145</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_145))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_145 &rArr; SPI_CloseTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CloseTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[183]"></a>OUTLINED_FUNCTION_146</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_146))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1bf]"></a>OUTLINED_FUNCTION_147</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_147))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_147 &rArr; lv_draw_mask_line &rArr; OUTLINED_FUNCTION_114
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
</UL>

<P><STRONG><a name="[36d]"></a>OUTLINED_FUNCTION_148</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_148))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[38d]"></a>OUTLINED_FUNCTION_149</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_149))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>

<P><STRONG><a name="[227]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[1c0]"></a>OUTLINED_FUNCTION_150</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_150))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[22f]"></a>OUTLINED_FUNCTION_151</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_151))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[22e]"></a>OUTLINED_FUNCTION_152</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_152))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[1c1]"></a>OUTLINED_FUNCTION_153</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_153))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_153 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.973
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.1004
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
</UL>

<P><STRONG><a name="[180]"></a>OUTLINED_FUNCTION_154</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_154))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1c2]"></a>OUTLINED_FUNCTION_155</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_155))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = OUTLINED_FUNCTION_155 &rArr; lv_obj_mark_layout_as_dirty &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1c4]"></a>OUTLINED_FUNCTION_156</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_156))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OUTLINED_FUNCTION_156 &rArr; __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[2be]"></a>OUTLINED_FUNCTION_157</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_157))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[2bb]"></a>OUTLINED_FUNCTION_158</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_158))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[300]"></a>OUTLINED_FUNCTION_159</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_159))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[3a4]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[1c5]"></a>OUTLINED_FUNCTION_160</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_160))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_160 &rArr; lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[3fe]"></a>OUTLINED_FUNCTION_161</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_161))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
</UL>

<P><STRONG><a name="[3ff]"></a>OUTLINED_FUNCTION_162</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_162))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
</UL>

<P><STRONG><a name="[3fd]"></a>OUTLINED_FUNCTION_163</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_163))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
</UL>

<P><STRONG><a name="[401]"></a>OUTLINED_FUNCTION_164</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_164))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
</UL>

<P><STRONG><a name="[282]"></a>OUTLINED_FUNCTION_165</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_165))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[3d5]"></a>OUTLINED_FUNCTION_166</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_166))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDeleteByte
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellClearCommandLine
</UL>

<P><STRONG><a name="[3a5]"></a>OUTLINED_FUNCTION_167</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_167))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[2d8]"></a>OUTLINED_FUNCTION_168</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_168))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
</UL>

<P><STRONG><a name="[308]"></a>OUTLINED_FUNCTION_169</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_169))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[1c7]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_17 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.446
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.437
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.1006
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[280]"></a>OUTLINED_FUNCTION_170</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_170))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[1c8]"></a>OUTLINED_FUNCTION_171</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_171))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_171 &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[36f]"></a>OUTLINED_FUNCTION_172</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_172))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[329]"></a>OUTLINED_FUNCTION_173</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_173))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[2e9]"></a>OUTLINED_FUNCTION_174</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_174))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[37b]"></a>OUTLINED_FUNCTION_175</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_175))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>

<P><STRONG><a name="[1c9]"></a>OUTLINED_FUNCTION_176</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_176))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_176 &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[1ca]"></a>OUTLINED_FUNCTION_177</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_177))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_177 &rArr; lv_obj_get_style_opa.187 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa.187
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
</UL>

<P><STRONG><a name="[241]"></a>OUTLINED_FUNCTION_178</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_178))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
</UL>

<P><STRONG><a name="[1cc]"></a>OUTLINED_FUNCTION_179</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_179))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_179
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellCheckPermission
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellVars
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUsers
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellKeys
</UL>

<P><STRONG><a name="[1ce]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_18 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.445
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.436
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.244
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[1cf]"></a>OUTLINED_FUNCTION_180</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_180))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_180 &rArr; lv_obj_get_style_pad_bottom.943 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.943
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
</UL>

<P><STRONG><a name="[1d0]"></a>OUTLINED_FUNCTION_181</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_181))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = OUTLINED_FUNCTION_181 &rArr; lv_obj_get_content_width &rArr; lv_obj_get_style_pad_right.206 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[1d2]"></a>OUTLINED_FUNCTION_182</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_182))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_182 &rArr; shellWritePrompt &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWritePrompt
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTask
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
</UL>

<P><STRONG><a name="[1d4]"></a>OUTLINED_FUNCTION_183</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_183))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = OUTLINED_FUNCTION_183 &rArr; lv_obj_get_scroll_right &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
</UL>

<P><STRONG><a name="[1d6]"></a>OUTLINED_FUNCTION_184</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_184))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[1d8]"></a>OUTLINED_FUNCTION_185</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_185))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_185 &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1da]"></a>OUTLINED_FUNCTION_186</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_186))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_186 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool
</UL>

<P><STRONG><a name="[346]"></a>OUTLINED_FUNCTION_187</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_187))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[1dc]"></a>OUTLINED_FUNCTION_188</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_188))
<BR><BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[1de]"></a>OUTLINED_FUNCTION_189</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_189))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_189 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
</UL>

<P><STRONG><a name="[1df]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.975
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.948
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.207
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[1e0]"></a>OUTLINED_FUNCTION_190</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_190))
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[331]"></a>OUTLINED_FUNCTION_191</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_191))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
</UL>

<P><STRONG><a name="[377]"></a>OUTLINED_FUNCTION_192</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_192))
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>

<P><STRONG><a name="[17c]"></a>OUTLINED_FUNCTION_193</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_193))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[22b]"></a>OUTLINED_FUNCTION_194</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_194))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[1e1]"></a>OUTLINED_FUNCTION_195</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_195))
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_recv
</UL>

<P><STRONG><a name="[27f]"></a>OUTLINED_FUNCTION_196</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_196))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[229]"></a>OUTLINED_FUNCTION_197</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_197))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
</UL>

<P><STRONG><a name="[1e3]"></a>OUTLINED_FUNCTION_198</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_198))
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[251]"></a>OUTLINED_FUNCTION_199</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_199))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb.913
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[1e4]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_timer_free_cb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[2ff]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_20))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2ba]"></a>OUTLINED_FUNCTION_200</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_200))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[30c]"></a>OUTLINED_FUNCTION_201</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_201))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[30d]"></a>OUTLINED_FUNCTION_202</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_202))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[30e]"></a>OUTLINED_FUNCTION_203</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_203))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[3a6]"></a>OUTLINED_FUNCTION_204</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_204))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[187]"></a>OUTLINED_FUNCTION_205</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_205))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[39c]"></a>OUTLINED_FUNCTION_206</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_206))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[3a3]"></a>OUTLINED_FUNCTION_207</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_207))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[3a2]"></a>OUTLINED_FUNCTION_208</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_208))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[26e]"></a>OUTLINED_FUNCTION_209</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_209))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_data_out
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_ndata
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_data
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_command
</UL>

<P><STRONG><a name="[1e5]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[37e]"></a>OUTLINED_FUNCTION_210</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_210))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>

<P><STRONG><a name="[37d]"></a>OUTLINED_FUNCTION_211</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_211))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>

<P><STRONG><a name="[305]"></a>OUTLINED_FUNCTION_212</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_212))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[3ea]"></a>OUTLINED_FUNCTION_213</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_213))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[3eb]"></a>OUTLINED_FUNCTION_214</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_214))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[192]"></a>OUTLINED_FUNCTION_215</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_215))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>

<P><STRONG><a name="[30a]"></a>OUTLINED_FUNCTION_216</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_216))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[302]"></a>OUTLINED_FUNCTION_217</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_217))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[221]"></a>OUTLINED_FUNCTION_218</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_218))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[1e7]"></a>OUTLINED_FUNCTION_219</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_219))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_219 &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
</UL>

<P><STRONG><a name="[1e9]"></a>OUTLINED_FUNCTION_22</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_22))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OUTLINED_FUNCTION_22 &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
</UL>

<P><STRONG><a name="[1ea]"></a>OUTLINED_FUNCTION_220</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_220))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_220 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column.444
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
</UL>

<P><STRONG><a name="[1eb]"></a>OUTLINED_FUNCTION_221</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_221))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_221 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout.202
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
</UL>

<P><STRONG><a name="[1ec]"></a>OUTLINED_FUNCTION_222</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_222))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_222 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row.443
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
</UL>

<P><STRONG><a name="[1ed]"></a>OUTLINED_FUNCTION_223</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_223))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_223 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[223]"></a>OUTLINED_FUNCTION_224</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_224))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[17e]"></a>OUTLINED_FUNCTION_225</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_225))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[347]"></a>OUTLINED_FUNCTION_226</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_226))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[3f9]"></a>OUTLINED_FUNCTION_227</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_227))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
</UL>

<P><STRONG><a name="[33f]"></a>OUTLINED_FUNCTION_228</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_228))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[1ee]"></a>OUTLINED_FUNCTION_229</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_229))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_229 &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>

<P><STRONG><a name="[1ef]"></a>OUTLINED_FUNCTION_23</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_23))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OUTLINED_FUNCTION_23 &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[2c3]"></a>OUTLINED_FUNCTION_230</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_230))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[248]"></a>OUTLINED_FUNCTION_231</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_231))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[2fc]"></a>OUTLINED_FUNCTION_232</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_232))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[257]"></a>OUTLINED_FUNCTION_233</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_233))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove.912
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert.878
</UL>

<P><STRONG><a name="[1f0]"></a>OUTLINED_FUNCTION_234</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_234))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_234 &rArr; lv_obj_get_style_pad_left.940 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.940
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[1f2]"></a>OUTLINED_FUNCTION_235</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_235))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OUTLINED_FUNCTION_235 &rArr; lv_obj_init_draw_label_dsc &rArr; OUTLINED_FUNCTION_177 &rArr; lv_obj_get_style_opa.187 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
</UL>

<P><STRONG><a name="[1f4]"></a>OUTLINED_FUNCTION_236</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_236))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OUTLINED_FUNCTION_236 &rArr; lv_obj_is_layout_positioned &rArr; lv_obj_get_style_layout.202 &rArr; OUTLINED_FUNCTION_221 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[1f6]"></a>OUTLINED_FUNCTION_237</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_237))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_237 &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[1f7]"></a>OUTLINED_FUNCTION_238</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_238))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = OUTLINED_FUNCTION_238 &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
</UL>

<P><STRONG><a name="[1f9]"></a>OUTLINED_FUNCTION_239</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_239))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_239 &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[1fa]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_24))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = OUTLINED_FUNCTION_24 &rArr; lv_draw_mask_add &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[1fc]"></a>OUTLINED_FUNCTION_240</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_240))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_240 &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1fd]"></a>OUTLINED_FUNCTION_241</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_241))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_241 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[1fe]"></a>OUTLINED_FUNCTION_242</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_242))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_242 &rArr; lv_anim_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[3f3]"></a>OUTLINED_FUNCTION_243</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_243))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>

<P><STRONG><a name="[284]"></a>OUTLINED_FUNCTION_244</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_244))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[3f2]"></a>OUTLINED_FUNCTION_245</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_245))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>

<P><STRONG><a name="[200]"></a>OUTLINED_FUNCTION_246</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_246))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = OUTLINED_FUNCTION_246 &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_auto_size
</UL>

<P><STRONG><a name="[327]"></a>OUTLINED_FUNCTION_247</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_247))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[3f0]"></a>OUTLINED_FUNCTION_248</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_248))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[18b]"></a>OUTLINED_FUNCTION_249</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_249))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
</UL>

<P><STRONG><a name="[202]"></a>OUTLINED_FUNCTION_25</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_25))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_25 &rArr; _lv_blend_fill &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[203]"></a>OUTLINED_FUNCTION_250</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_250))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_250 &rArr; lv_obj_event_base
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[2c2]"></a>OUTLINED_FUNCTION_251</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_251))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[222]"></a>OUTLINED_FUNCTION_252</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_252))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[39e]"></a>OUTLINED_FUNCTION_253</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_253))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[24b]"></a>OUTLINED_FUNCTION_254</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_254))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[17a]"></a>OUTLINED_FUNCTION_26</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_26))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_26 &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[205]"></a>OUTLINED_FUNCTION_27</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_27))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OUTLINED_FUNCTION_27 &rArr; __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[2bf]"></a>OUTLINED_FUNCTION_28</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_28))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[206]"></a>OUTLINED_FUNCTION_29</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_29))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[301]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[207]"></a>OUTLINED_FUNCTION_30</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_30))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_30 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height.447
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height.438
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[2ed]"></a>OUTLINED_FUNCTION_31</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_31))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[249]"></a>OUTLINED_FUNCTION_32</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_32))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[2fa]"></a>OUTLINED_FUNCTION_33</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_33))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[307]"></a>OUTLINED_FUNCTION_34</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_34))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[345]"></a>OUTLINED_FUNCTION_35</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_35))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[246]"></a>OUTLINED_FUNCTION_36</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_36))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[39b]"></a>OUTLINED_FUNCTION_37</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_37))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[309]"></a>OUTLINED_FUNCTION_38</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_38))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2fd]"></a>OUTLINED_FUNCTION_39</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_39))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[208]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[209]"></a>OUTLINED_FUNCTION_40</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_40))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = OUTLINED_FUNCTION_40 &rArr; lv_txt_get_width &rArr; _lv_txt_encoded_letter_next_2 &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[174]"></a>OUTLINED_FUNCTION_41</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_41))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
</UL>

<P><STRONG><a name="[173]"></a>OUTLINED_FUNCTION_42</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_42))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
</UL>

<P><STRONG><a name="[20b]"></a>OUTLINED_FUNCTION_43</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_43))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OUTLINED_FUNCTION_43 &rArr; _lv_area_intersect
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[181]"></a>OUTLINED_FUNCTION_44</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_44))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_44 &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2d9]"></a>OUTLINED_FUNCTION_45</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_45))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width.950
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height.951
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>

<P><STRONG><a name="[18c]"></a>OUTLINED_FUNCTION_46</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_46))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[20c]"></a>OUTLINED_FUNCTION_47</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_47))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_47 &rArr; _lv_blend_fill &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[3aa]"></a>OUTLINED_FUNCTION_48</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_48))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[283]"></a>OUTLINED_FUNCTION_49</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_49))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[17d]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2df]"></a>OUTLINED_FUNCTION_50</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_50))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix.403
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>

<P><STRONG><a name="[39d]"></a>OUTLINED_FUNCTION_51</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_51))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[37c]"></a>OUTLINED_FUNCTION_52</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_52))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>

<P><STRONG><a name="[306]"></a>OUTLINED_FUNCTION_53</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_53))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[20d]"></a>OUTLINED_FUNCTION_54</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_54))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_54 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.949
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.240
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.208
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[171]"></a>OUTLINED_FUNCTION_55</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_55))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
</UL>

<P><STRONG><a name="[3ef]"></a>OUTLINED_FUNCTION_56</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_56))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[17f]"></a>OUTLINED_FUNCTION_57</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_57))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[245]"></a>OUTLINED_FUNCTION_58</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_58))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[3ec]"></a>OUTLINED_FUNCTION_59</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_59))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[178]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_6 &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[3a9]"></a>OUTLINED_FUNCTION_60</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_60))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2bc]"></a>OUTLINED_FUNCTION_61</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_61))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[400]"></a>OUTLINED_FUNCTION_62</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_62))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
</UL>

<P><STRONG><a name="[20e]"></a>OUTLINED_FUNCTION_63</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_63))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_63 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.974
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.241
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[20f]"></a>OUTLINED_FUNCTION_64</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_64))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_64 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_span
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_pos
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_col_span
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_col_pos
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[210]"></a>OUTLINED_FUNCTION_65</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_65))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = OUTLINED_FUNCTION_65 &rArr; lv_txt_get_width &rArr; _lv_txt_encoded_letter_next_2 &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[2c6]"></a>OUTLINED_FUNCTION_66</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_66))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[211]"></a>OUTLINED_FUNCTION_67</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_67))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.947
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.941
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.245
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.206
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[17b]"></a>OUTLINED_FUNCTION_68</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_68))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[3ab]"></a>OUTLINED_FUNCTION_69</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_69))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21f]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>

<P><STRONG><a name="[39a]"></a>OUTLINED_FUNCTION_70</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_70))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[39f]"></a>OUTLINED_FUNCTION_71</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_71))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[212]"></a>OUTLINED_FUNCTION_72</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_72))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = OUTLINED_FUNCTION_72 &rArr; lv_txt_get_width &rArr; _lv_txt_encoded_letter_next_2 &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[213]"></a>OUTLINED_FUNCTION_73</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_73))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_73 &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTask
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetUser
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListItem
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[214]"></a>OUTLINED_FUNCTION_74</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_74))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OUTLINED_FUNCTION_74 &rArr; lv_draw_mask_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[318]"></a>OUTLINED_FUNCTION_75</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_75))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[225]"></a>OUTLINED_FUNCTION_76</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_76))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[2eb]"></a>OUTLINED_FUNCTION_77</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_77))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[2f6]"></a>OUTLINED_FUNCTION_78</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_78))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[170]"></a>OUTLINED_FUNCTION_79</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_79))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
</UL>

<P><STRONG><a name="[326]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[2c5]"></a>OUTLINED_FUNCTION_80</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_80))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[3ac]"></a>OUTLINED_FUNCTION_81</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_81))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[281]"></a>OUTLINED_FUNCTION_82</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_82))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[215]"></a>OUTLINED_FUNCTION_83</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_83))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_83 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[216]"></a>OUTLINED_FUNCTION_84</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_84))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_84 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>

<P><STRONG><a name="[325]"></a>OUTLINED_FUNCTION_85</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_85))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[25e]"></a>OUTLINED_FUNCTION_86</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_86))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free.901
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
</UL>

<P><STRONG><a name="[261]"></a>OUTLINED_FUNCTION_87</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_87))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used.899
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
</UL>

<P><STRONG><a name="[169]"></a>OUTLINED_FUNCTION_88</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_88))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>

<P><STRONG><a name="[177]"></a>OUTLINED_FUNCTION_89</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_89))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OUTLINED_FUNCTION_89 &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2ee]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[217]"></a>OUTLINED_FUNCTION_90</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_90))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = OUTLINED_FUNCTION_90 &rArr; _lv_blend_fill &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[218]"></a>OUTLINED_FUNCTION_91</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_91))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_91 &rArr; _lv_area_is_out &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[21a]"></a>OUTLINED_FUNCTION_92</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_92))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_92 &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[269]"></a>OUTLINED_FUNCTION_93</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_93))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove.912
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
</UL>

<P><STRONG><a name="[21b]"></a>OUTLINED_FUNCTION_94</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_94))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_94 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[25b]"></a>OUTLINED_FUNCTION_95</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_95))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[303]"></a>OUTLINED_FUNCTION_96</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_96))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[21c]"></a>OUTLINED_FUNCTION_97</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_97))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_97 &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[21d]"></a>OUTLINED_FUNCTION_98</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_98))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_98 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.946
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.246
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.205
</UL>

<P><STRONG><a name="[21e]"></a>OUTLINED_FUNCTION_99</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.OUTLINED_FUNCTION_99))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OUTLINED_FUNCTION_99 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[1b1]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_89
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_44
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
</UL>

<P><STRONG><a name="[1ba]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
</UL>

<P><STRONG><a name="[1be]"></a>SPI_CloseTransfer</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.SPI_CloseTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_CloseTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_145
</UL>

<P><STRONG><a name="[97]"></a>SPI_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.SPI_DMAAbortOnError))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.HAL_SPI_IRQHandler)
</UL>
<P><STRONG><a name="[103]"></a>SPI_DMAError</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.SPI_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DMAError &rArr; OUTLINED_FUNCTION_145 &rArr; SPI_CloseTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_145
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.spi_send_async)
</UL>
<P><STRONG><a name="[105]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.SPI_DMAHalfTransmitCplt))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.spi_send_async)
</UL>
<P><STRONG><a name="[104]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.SPI_DMATransmitCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMATransmitCplt &rArr; HAL_SPI_TxCpltCallback &rArr; osSemaphoreRelease &rArr; SemaphoreTokenIncrement
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.spi_send_async)
</UL>
<P><STRONG><a name="[220]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_recv
</UL>

<P><STRONG><a name="[3ad]"></a>UARTEx_SetNbDataToProcess</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.UARTEx_SetNbDataToProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_DMAAbortOnError))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[a9]"></a>UART_DMAError</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.UART_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
</UL>
<P><STRONG><a name="[ab]"></a>UART_DMAReceiveCplt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART_DMAReceiveCplt &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
</UL>
<P><STRONG><a name="[aa]"></a>UART_DMARxHalfCplt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_DMARxHalfCplt))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
</UL>
<P><STRONG><a name="[193]"></a>UART_EndRxTransfer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>

<P><STRONG><a name="[191]"></a>UART_EndTxTransfer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_EndTxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>

<P><STRONG><a name="[99]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART_RxISR_16BIT &rArr; OUTLINED_FUNCTION_22 &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_218
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
<LI> lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT_FIFOEN)
</UL>
<P><STRONG><a name="[ac]"></a>UART_RxISR_16BIT_FIFOEN</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.UART_RxISR_16BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UART_RxISR_16BIT_FIFOEN &rArr; OUTLINED_FUNCTION_23 &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_252
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_224
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_134
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
</UL>
<P><STRONG><a name="[9a]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART_RxISR_8BIT &rArr; OUTLINED_FUNCTION_22 &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_218
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
<LI> lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT_FIFOEN)
</UL>
<P><STRONG><a name="[ad]"></a>UART_RxISR_8BIT_FIFOEN</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.UART_RxISR_8BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UART_RxISR_8BIT_FIFOEN &rArr; OUTLINED_FUNCTION_23 &rArr; HAL_UART_RxCpltCallback &rArr; com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_252
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_224
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_134
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_recv)
</UL>
<P><STRONG><a name="[1d9]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_76
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_185
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_send
</UL>

<P><STRONG><a name="[247]"></a>_atoi</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._atoi))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[19f]"></a>_lv_area_intersect</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text._lv_area_intersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_102
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[1e8]"></a>_lv_area_is_in</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text._lv_area_is_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_92
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_219
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
</UL>

<P><STRONG><a name="[219]"></a>_lv_area_is_out</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text._lv_area_is_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _lv_area_is_out &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_91
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
</UL>

<P><STRONG><a name="[226]"></a>_lv_area_is_point_on</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text._lv_area_is_point_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>

<P><STRONG><a name="[1b7]"></a>_lv_blend_fill</STRONG> (Thumb, 1732 bytes, Stack size 136 bytes, lto-llvm-e2b3d9.o(.text._lv_blend_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = _lv_blend_fill &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_176
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_133
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[228]"></a>_lv_blend_map</STRONG> (Thumb, 1764 bytes, Stack size 144 bytes, lto-llvm-e2b3d9.o(.text._lv_blend_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264<LI>Call Chain = _lv_blend_map &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_197
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_118
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[c1]"></a>_lv_disp_refr_timer</STRONG> (Thumb, 1000 bytes, Stack size 88 bytes, lto-llvm-e2b3d9.o(.text._lv_disp_refr_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 2592 + Unknown Stack Size
<LI>Call Chain = _lv_disp_refr_timer &rArr; lv_refr_area_part &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_194
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_188
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_152
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_151
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_disp_drv_register)
</UL>
<P><STRONG><a name="[d2]"></a>_lv_ll_get_head</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._lv_ll_get_head))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[d3]"></a>_lv_ll_get_next</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._lv_ll_get_next))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[d1]"></a>_lv_ll_get_prev</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._lv_ll_get_prev))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[d0]"></a>_lv_ll_get_tail</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._lv_ll_get_tail))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_destructor)
</UL>
<P><STRONG><a name="[232]"></a>_lv_ll_ins_head</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text._lv_ll_ins_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[24d]"></a>_lv_ll_remove</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text._lv_ll_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>

<P><STRONG><a name="[19a]"></a>_lv_log_add</STRONG> (Thumb, 144 bytes, Stack size 840 bytes, lto-llvm-e2b3d9.o(.text._lv_log_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_log_output
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[237]"></a>_lv_txt_encoded_letter_next_2</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text._lv_txt_encoded_letter_next_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _lv_txt_encoded_letter_next_2 &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[239]"></a>_lv_txt_get_next_line</STRONG> (Thumb, 472 bytes, Stack size 112 bytes, lto-llvm-e2b3d9.o(.text._lv_txt_get_next_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _lv_txt_get_next_line &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[23a]"></a>_lv_txt_is_cmd</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._lv_txt_is_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>

<P><STRONG><a name="[29c]"></a>_lv_utils_bsearch</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text._lv_utils_bsearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>

<P><STRONG><a name="[240]"></a>_ntoa_format</STRONG> (Thumb, 342 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text._ntoa_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_178
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long
</UL>

<P><STRONG><a name="[1d7]"></a>_ntoa_long</STRONG> (Thumb, 150 bytes, Stack size 112 bytes, lto-llvm-e2b3d9.o(.text._ntoa_long))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_184
</UL>

<P><STRONG><a name="[242]"></a>_ntoa_long_long</STRONG> (Thumb, 160 bytes, Stack size 112 bytes, lto-llvm-e2b3d9.o(.text._ntoa_long_long))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _ntoa_long_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[9f]"></a>_out_buffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._out_buffer))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text._vsnprintf)
</UL>
<P><STRONG><a name="[9e]"></a>_out_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text._out_null))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text._vsnprintf)
</UL>
<P><STRONG><a name="[234]"></a>_vsnprintf</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, lto-llvm-e2b3d9.o(.text._vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_58
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_36
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_254
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_231
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_184
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_140
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_104
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>

<P><STRONG><a name="[3b2]"></a>adjust_request_size</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.adjust_request_size))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_alloc
</UL>

<P><STRONG><a name="[24e]"></a>anim_mark_list_change</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.anim_mark_list_change))
<BR><BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>

<P><STRONG><a name="[b4]"></a>anim_timer</STRONG> (Thumb, 336 bytes, Stack size 104 bytes, lto-llvm-e2b3d9.o(.text.anim_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = anim_timer &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[24f]"></a>apply_theme</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.apply_theme))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = apply_theme &rArr;  apply_theme (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>

<P><STRONG><a name="[250]"></a>block_absorb</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.block_absorb))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = block_absorb &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_199
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[253]"></a>block_absorb.913</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.block_absorb.913))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_199
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next.879
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next.914
</UL>

<P><STRONG><a name="[255]"></a>block_insert</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text.block_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = block_insert &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[256]"></a>block_insert.878</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.block_insert.878))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = block_insert.878 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_233
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[252]"></a>block_link_next</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_link_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_pool
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[254]"></a>block_link_next.879</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_link_next.879))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next.865
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free.901
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb.913
</UL>

<P><STRONG><a name="[25a]"></a>block_locate_free</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.block_locate_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = block_locate_free &rArr; remove_free_block &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_95
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_alloc
</UL>

<P><STRONG><a name="[25d]"></a>block_mark_as_free</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_mark_as_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_86
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
</UL>

<P><STRONG><a name="[25f]"></a>block_mark_as_free.901</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_mark_as_free.901))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_86
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next.879
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split.898
</UL>

<P><STRONG><a name="[260]"></a>block_mark_as_used</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_mark_as_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = block_mark_as_used &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_87
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[262]"></a>block_mark_as_used.899</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_mark_as_used.899))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = block_mark_as_used.899 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_87
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next.865
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[263]"></a>block_merge_next</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.block_merge_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = block_merge_next &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
</UL>

<P><STRONG><a name="[265]"></a>block_merge_next.914</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.block_merge_next.914))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184<LI>Call Chain = block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove.912
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next.865
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb.913
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[258]"></a>block_next</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.block_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>

<P><STRONG><a name="[259]"></a>block_next.865</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.block_next.865))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next.914
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used.899
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next.879
</UL>

<P><STRONG><a name="[267]"></a>block_prepare_used</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.block_prepare_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_alloc
</UL>

<P><STRONG><a name="[264]"></a>block_remove</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = block_remove &rArr; remove_free_block &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_93
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_233
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[266]"></a>block_remove.912</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.block_remove.912))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = block_remove.912 &rArr; remove_free_block.882 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_93
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_233
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block.882
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next.914
</UL>

<P><STRONG><a name="[268]"></a>block_split</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text.block_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[26b]"></a>block_split.898</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.block_split.898))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free.901
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[26c]"></a>bsp_lcd_fill_frame</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.bsp_lcd_fill_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bsp_lcd_fill_frame &rArr; bsp_lcd_set_cursor &rArr; bsp_lcd_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_command
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_set_cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[26d]"></a>bsp_lcd_set_cursor</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.bsp_lcd_set_cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_lcd_set_cursor &rArr; bsp_lcd_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_fill_frame
</UL>

<P><STRONG><a name="[bb]"></a>bsp_lcd_write_command</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.bsp_lcd_write_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_lcd_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_209
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_set_cursor
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_fill_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[bc]"></a>bsp_lcd_write_data</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.bsp_lcd_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_lcd_write_data
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_209
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[a0]"></a>bsp_lcd_write_ndata</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.bsp_lcd_write_ndata))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_lcd_write_ndata
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_209
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.bsp_lcd_set_cursor)
</UL>
<P><STRONG><a name="[26f]"></a>calc_auto_size</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.calc_auto_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = calc_auto_size &rArr; OUTLINED_FUNCTION_246 &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_246
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[271]"></a>children_repos</STRONG> (Thumb, 868 bytes, Stack size 96 bytes, lto-llvm-e2b3d9.o(.text.children_repos))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = children_repos &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_181
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;place_content
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_flex_grow
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.436
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_item
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[9b]"></a>color_blend_true_color_additive</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.color_blend_true_color_additive))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = color_blend_true_color_additive &rArr; OUTLINED_FUNCTION_121 &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_121
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text._lv_blend_fill)
<LI> lto-llvm-e2b3d9.o(.text._lv_blend_map)
</UL>
<P><STRONG><a name="[9c]"></a>color_blend_true_color_subtractive</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.color_blend_true_color_subtractive))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = color_blend_true_color_subtractive &rArr; OUTLINED_FUNCTION_121 &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_121
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text._lv_blend_fill)
<LI> lto-llvm-e2b3d9.o(.text._lv_blend_map)
</UL>
<P><STRONG><a name="[278]"></a>com_create</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.com_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = com_create &rArr; memory_calloc &rArr; memory_alloc &rArr; block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
</UL>

<P><STRONG><a name="[a8]"></a>com_recv</STRONG> (Thumb, 540 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.com_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = com_recv &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_195
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_create)
</UL>
<P><STRONG><a name="[196]"></a>com_recv_callback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.com_recv_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = com_recv_callback &rArr; HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>com_send</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.com_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = com_send &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.com_create)
</UL>
<P><STRONG><a name="[2a3]"></a>count_tracks</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.count_tracks))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[e8]"></a>dark_color_filter_cb.459</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.dark_color_filter_cb.459))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dark_color_filter_cb.459
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[bd]"></a>disp_flush</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.disp_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = disp_flush &rArr; bsp_lcd_fill_frame &rArr; bsp_lcd_set_cursor &rArr; bsp_lcd_write_command
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_fill_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[27c]"></a>draw_border_generic</STRONG> (Thumb, 1452 bytes, Stack size 192 bytes, lto-llvm-e2b3d9.o(.text.draw_border_generic))
<BR><BR>[Stack]<UL><LI>Max Depth = 1600 + Unknown Stack Size
<LI>Call Chain = draw_border_generic &rArr; lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_82
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_49
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_47
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_244
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_196
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_170
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_165
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_143
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_133
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_117
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_116
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[285]"></a>draw_box</STRONG> (Thumb, 220 bytes, Stack size 96 bytes, lto-llvm-e2b3d9.o(.text.draw_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 2496 + Unknown Stack Size
<LI>Call Chain = draw_box &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.973
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[28b]"></a>draw_box_label</STRONG> (Thumb, 208 bytes, Stack size 80 bytes, lto-llvm-e2b3d9.o(.text.draw_box_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016 + Unknown Stack Size
<LI>Call Chain = draw_box_label &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_235
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[230]"></a>draw_buf_flush</STRONG> (Thumb, 972 bytes, Stack size 112 bytes, lto-llvm-e2b3d9.o(.text.draw_buf_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = draw_buf_flush &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[3e7]"></a>ds_vector_at</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.ds_vector_at))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_timer_free_cb
</UL>

<P><STRONG><a name="[3fa]"></a>ds_vector_lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.ds_vector_lock))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
</UL>

<P><STRONG><a name="[3fb]"></a>ds_vector_unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.ds_vector_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
</UL>

<P><STRONG><a name="[28d]"></a>event_send_core</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.event_send_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>

<P><STRONG><a name="[1bd]"></a>find_track_end</STRONG> (Thumb, 608 bytes, Stack size 72 bytes, lto-llvm-e2b3d9.o(.text.find_track_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = find_track_end &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.437
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height.438
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_flex_grow
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_item
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_144
</UL>

<P><STRONG><a name="[b9]"></a>flex_update</STRONG> (Thumb, 704 bytes, Stack size 128 bytes, lto-llvm-e2b3d9.o(.text.flex_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 1584 + Unknown Stack Size
<LI>Call Chain = flex_update &rArr; lv_obj_refr_size &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_181
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_144
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;place_content
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.437
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height.438
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.436
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[294]"></a>focus_next_core</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.focus_next_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_229
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[295]"></a>get_center</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.get_center))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = get_center &rArr; OUTLINED_FUNCTION_180 &rArr; lv_obj_get_style_pad_bottom.943 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_180
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.942
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.941
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.940
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_arc_width
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[298]"></a>get_col_dsc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.get_col_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_col_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[299]"></a>get_col_pos</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.get_col_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_col_pos &rArr; OUTLINED_FUNCTION_64 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[29a]"></a>get_col_span</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.get_col_span))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_col_span &rArr; OUTLINED_FUNCTION_64 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[29b]"></a>get_glyph_dsc_id</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.get_glyph_dsc_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[288]"></a>get_label</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.get_label))
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[277]"></a>get_next_item</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.get_next_item))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[29d]"></a>get_rounded_area</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.get_rounded_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_rounded_area
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[29e]"></a>get_row_dsc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.get_row_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_row_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[29f]"></a>get_row_pos</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.get_row_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_row_pos &rArr; OUTLINED_FUNCTION_64 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[2a0]"></a>get_row_span</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.get_row_span))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_row_span &rArr; OUTLINED_FUNCTION_64 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[2a1]"></a>get_trans_style</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.get_trans_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = get_trans_style &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[30b]"></a>grad_get</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.grad_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = grad_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[e9]"></a>grey_filter_cb.461</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.grey_filter_cb.461))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = grey_filter_cb.461
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[2a9]"></a>grid_align</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.grid_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = grid_align
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[ba]"></a>grid_update</STRONG> (Thumb, 1760 bytes, Stack size 112 bytes, lto-llvm-e2b3d9.o(.text.grid_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568 + Unknown Stack Size
<LI>Call Chain = grid_update &rArr; lv_obj_refr_size &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_241
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.446
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row.443
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column.444
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height.447
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.445
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_align
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_span
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_pos
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_dsc
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_col_span
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_col_pos
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_col_dsc
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_tracks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[117]"></a>gui_thread</STRONG> (Thumb, 1424 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.gui_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 2624 + Unknown Stack Size
<LI>Call Chain = gui_thread &rArr; _lv_disp_refr_timer &rArr; lv_refr_area_part &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_create
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_calloc
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_alloc
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_time_remaining
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_set_cursor
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_lcd_fill_frame
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next.879
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert.878
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[c6]"></a>hex_char_to_num</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.hex_char_to_num))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_label)
</UL>
<P><STRONG><a name="[2b7]"></a>inv_arc_area</STRONG> (Thumb, 1124 bytes, Stack size 80 bytes, lto-llvm-e2b3d9.o(.text.inv_arc_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = inv_arc_area &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_61
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_234
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_200
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_180
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_158
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_157
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_119
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_108
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_107
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.942
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.941
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.940
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_arc_width
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>

<P><STRONG><a name="[cb]"></a>kern_pair_16_compare</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.kern_pair_16_compare))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_font_get_glyph_dsc_fmt_txt)
</UL>
<P><STRONG><a name="[cc]"></a>kern_pair_8_compare</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.kern_pair_8_compare))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_font_get_glyph_dsc_fmt_txt)
</UL>
<P><STRONG><a name="[2c1]"></a>layout_update_core</STRONG> (Thumb, 528 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.layout_update_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_80
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_66
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_251
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_236
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_230
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_223
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout.202
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[2c9]"></a>log_control</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.log_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = log_control &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
</UL>

<P><STRONG><a name="[1db]"></a>log_out</STRONG> (Thumb, 852 bytes, Stack size 208 bytes, lto-llvm-e2b3d9.o(.text.log_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_186
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
</UL>

<P><STRONG><a name="[3a8]"></a>log_output</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.log_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;userShellWrite
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvgl_log_output
</UL>

<P><STRONG><a name="[2cd]"></a>log_snprintf</STRONG> (Thumb, 704 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.log_snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
</UL>

<P><STRONG><a name="[1f8]"></a>lv_anim_del</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_anim_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_238
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_destructor
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
</UL>

<P><STRONG><a name="[1ff]"></a>lv_anim_get</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_anim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_anim_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_242
</UL>

<P><STRONG><a name="[d7]"></a>lv_anim_path_ease_out</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_anim_path_ease_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_anim_path_ease_out
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by)
</UL>
<P><STRONG><a name="[cf]"></a>lv_anim_path_linear</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_anim_path_linear))
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by)
<LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
<LI> lto-llvm-e2b3d9.o(.text.lv_label_refr_text)
</UL>
<P><STRONG><a name="[2ce]"></a>lv_anim_start</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_anim_start &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[11f]"></a>lv_arc_constructor</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_arc_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = lv_arc_constructor &rArr; lv_obj_clear_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[120]"></a>lv_arc_event</STRONG> (Thumb, 908 bytes, Stack size 208 bytes, lto-llvm-e2b3d9.o(.text.lv_arc_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 2976 + Unknown Stack Size
<LI>Call Chain = lv_arc_event &rArr; lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_239
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_237
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_234
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_180
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_108
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_107
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_106
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_103
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.942
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.941
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.940
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.943
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_arc_width
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[2d6]"></a>lv_arc_set_end_angle</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_arc_set_end_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = lv_arc_set_end_angle &rArr; inv_arc_area &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
</UL>

<P><STRONG><a name="[2d7]"></a>lv_arc_set_start_angle</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_arc_set_start_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = lv_arc_set_start_angle &rArr; inv_arc_area &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
</UL>

<P><STRONG><a name="[2d5]"></a>lv_arc_set_value</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_arc_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = lv_arc_set_value &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_168
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[a2]"></a>lv_area_get_height</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_get_height))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.children_repos)
</UL>
<P><STRONG><a name="[c0]"></a>lv_area_get_height.951</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_get_height.951))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_bar_event)
</UL>
<P><STRONG><a name="[9d]"></a>lv_area_get_size</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text._lv_disp_refr_timer)
</UL>
<P><STRONG><a name="[a1]"></a>lv_area_get_width</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_get_width))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.children_repos)
</UL>
<P><STRONG><a name="[bf]"></a>lv_area_get_width.950</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_get_width.950))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_bar_event)
</UL>
<P><STRONG><a name="[373]"></a>lv_area_increase</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_increase))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
</UL>

<P><STRONG><a name="[a3]"></a>lv_area_set_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_set_height))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.children_repos)
</UL>
<P><STRONG><a name="[a4]"></a>lv_area_set_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_area_set_width))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.children_repos)
</UL>
<P><STRONG><a name="[121]"></a>lv_bar_constructor</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_bar_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280<LI>Call Chain = lv_bar_constructor &rArr; lv_obj_clear_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[122]"></a>lv_bar_destructor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_bar_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = lv_bar_destructor &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[123]"></a>lv_bar_event</STRONG> (Thumb, 1332 bytes, Stack size 288 bytes, lto-llvm-e2b3d9.o(.text.lv_bar_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 2688 + Unknown Stack Size
<LI>Call Chain = lv_bar_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_250
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_237
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_106
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.948
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.947
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.946
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.949
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[124]"></a>lv_btn_constructor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_btn_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280<LI>Call Chain = lv_btn_constructor &rArr; lv_obj_clear_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[336]"></a>lv_color_make</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_color_make))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[1b0]"></a>lv_color_mix</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_176
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_121
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_118
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[2e0]"></a>lv_color_mix.403</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.lv_color_mix.403))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix.403
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_50
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[e2]"></a>lv_disp_dpx</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_dpx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_dpx
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[2b0]"></a>lv_disp_drv_register</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = lv_disp_drv_register &rArr; lv_theme_default_init &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[2e1]"></a>lv_disp_get_dpi</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_get_dpi))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_dpx
</UL>

<P><STRONG><a name="[22c]"></a>lv_disp_get_hor_res</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_get_hor_res))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[2e5]"></a>lv_disp_get_layer_sys</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_get_layer_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_disp_get_layer_sys &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[2e6]"></a>lv_disp_get_layer_top</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_get_layer_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_disp_get_layer_top &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[2b1]"></a>lv_disp_get_scr_act</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_get_scr_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_disp_get_scr_act &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[1dd]"></a>lv_disp_get_ver_res</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_disp_get_ver_res))
<BR><BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_188
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[2d3]"></a>lv_draw_arc</STRONG> (Thumb, 2072 bytes, Stack size 368 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 2768 + Unknown Stack Size
<LI>Call Chain = lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_77
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_198
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_174
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_160
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_139
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_138
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_136
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_135
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_101
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rounded_area
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[2ef]"></a>lv_draw_img</STRONG> (Thumb, 1300 bytes, Stack size 120 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 2184 + Unknown Stack Size
<LI>Call Chain = lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[28c]"></a>lv_draw_label</STRONG> (Thumb, 2160 bytes, Stack size 320 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_78
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_char_id
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
</UL>

<P><STRONG><a name="[2f8]"></a>lv_draw_line</STRONG> (Thumb, 2052 bytes, Stack size 312 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 1616 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = lv_draw_line &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_43
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_156
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_143
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_133
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[2f4]"></a>lv_draw_map</STRONG> (Thumb, 2664 bytes, Stack size 312 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 1616 + Unknown Stack Size
<LI>Call Chain = lv_draw_map &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_143
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix.403
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[1fb]"></a>lv_draw_mask_add</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_draw_mask_add &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[c3]"></a>lv_draw_mask_angle</STRONG> (Thumb, 556 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_angle &rArr; OUTLINED_FUNCTION_147 &rArr; lv_draw_mask_line &rArr; OUTLINED_FUNCTION_114
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_147
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_arc)
</UL>
<P><STRONG><a name="[1ad]"></a>lv_draw_mask_apply</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_130
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_129
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_117
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_116
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[c4]"></a>lv_draw_mask_free_param</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_free_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = lv_draw_mask_free_param &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_arc)
</UL>
<P><STRONG><a name="[27d]"></a>lv_draw_mask_is_any</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_is_any))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_draw_mask_is_any &rArr; _lv_area_is_out &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[c9]"></a>lv_draw_mask_line</STRONG> (Thumb, 940 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_line &rArr; OUTLINED_FUNCTION_114
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_190
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_114
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_147
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_mask_line_points_init)
</UL>
<P><STRONG><a name="[2e7]"></a>lv_draw_mask_line_angle_init</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_line_angle_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_line_angle_init &rArr; lv_draw_mask_line_points_init
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[2f9]"></a>lv_draw_mask_line_points_init</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_line_points_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_line_points_init
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>

<P><STRONG><a name="[ca]"></a>lv_draw_mask_radius</STRONG> (Thumb, 550 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_radius
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_mask_radius_init)
</UL>
<P><STRONG><a name="[1c6]"></a>lv_draw_mask_radius_init</STRONG> (Thumb, 1016 bytes, Stack size 104 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_radius_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_160
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[c5]"></a>lv_draw_mask_remove_id</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_mask_remove_id))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_arc)
<LI> lto-llvm-e2b3d9.o(.text.lv_draw_line)
</UL>
<P><STRONG><a name="[28a]"></a>lv_draw_rect</STRONG> (Thumb, 4912 bytes, Stack size 216 bytes, lto-llvm-e2b3d9.o(.text.lv_draw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 2400 + Unknown Stack Size
<LI>Call Chain = lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_96
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_92
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_91
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_90
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_74
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_53
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_39
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_38
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_34
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_232
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_217
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_216
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_212
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_203
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_202
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_201
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_169
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_159
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_143
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_133
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_132
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_131
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_130
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_129
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_128
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_102
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grad_get
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[310]"></a>lv_dropdown_close</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdown_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_close &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[125]"></a>lv_dropdown_constructor</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdown_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = lv_dropdown_constructor &rArr; lv_obj_add_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[126]"></a>lv_dropdown_destructor</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdown_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_destructor &rArr; lv_obj_del &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[127]"></a>lv_dropdown_event</STRONG> (Thumb, 1144 bytes, Stack size 136 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdown_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 2320 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_event &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_250
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_235
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_106
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.973
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.975
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa.187
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.974
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[12a]"></a>lv_dropdown_list_event</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdown_list_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 2536 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_list_event &rArr; draw_box &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_237
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[317]"></a>lv_dropdown_open</STRONG> (Thumb, 936 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdown_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576 + Unknown Stack Size
<LI>Call Chain = lv_dropdown_open &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_85
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_247
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_188
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_173
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_120
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_110
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.975
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.207
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.205
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.974
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[128]"></a>lv_dropdownlist_constructor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdownlist_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384 + Unknown Stack Size
<LI>Call Chain = lv_dropdownlist_constructor &rArr; lv_label_create &rArr; lv_obj_class_init_obj &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[129]"></a>lv_dropdownlist_destructor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_dropdownlist_destructor))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[dc]"></a>lv_event_send</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.lv_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_240
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_239
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_237
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_229
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_171
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_refr_obj_and_children)
</UL>
<P><STRONG><a name="[11e]"></a>lv_font_get_bitmap_fmt_txt</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_font_get_bitmap_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_font_get_bitmap_fmt_txt &rArr; get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[11d]"></a>lv_font_get_glyph_dsc_fmt_txt</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_font_get_glyph_dsc_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_font_get_glyph_dsc_fmt_txt &rArr; get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[333]"></a>lv_fs_close</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_fs_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
</UL>

<P><STRONG><a name="[32f]"></a>lv_fs_get_ext</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_fs_get_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_fs_get_ext &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[330]"></a>lv_fs_open</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_fs_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_fs_open &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[334]"></a>lv_fs_read</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[335]"></a>lv_fs_seek</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_fs_seek))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[c8]"></a>lv_img_buf_get_px_alpha</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_img_buf_get_px_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_191
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_map)
</UL>
<P><STRONG><a name="[c7]"></a>lv_img_buf_get_px_color</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_img_buf_get_px_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_buf_get_px_color
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_map)
</UL>
<P><STRONG><a name="[332]"></a>lv_img_cf_get_px_size</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_img_cf_get_px_size))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
</UL>

<P><STRONG><a name="[b5]"></a>lv_img_decoder_built_in_close</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = lv_img_decoder_built_in_close &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[b8]"></a>lv_img_decoder_built_in_info</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = lv_img_decoder_built_in_info &rArr; lv_fs_open &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[b7]"></a>lv_img_decoder_built_in_open</STRONG> (Thumb, 504 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = lv_img_decoder_built_in_open &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[b6]"></a>lv_img_decoder_built_in_read_line</STRONG> (Thumb, 780 bytes, Stack size 72 bytes, lto-llvm-e2b3d9.o(.text.lv_img_decoder_built_in_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = lv_img_decoder_built_in_read_line &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_142
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_115
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_113
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[2f3]"></a>lv_img_decoder_close</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_img_decoder_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = lv_img_decoder_close &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[30f]"></a>lv_img_decoder_get_info</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_img_decoder_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_decoder_get_info
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[2f0]"></a>lv_img_src_get_type</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_img_src_get_type))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[35e]"></a>lv_indev_get_scroll_obj</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_indev_get_scroll_obj))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[12b]"></a>lv_label_constructor</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_label_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512 + Unknown Stack Size
<LI>Call Chain = lv_label_constructor &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_anim_start &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_238
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[2b2]"></a>lv_label_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_label_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = lv_label_create &rArr; lv_obj_class_init_obj &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[12c]"></a>lv_label_destructor</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_label_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = lv_label_destructor &rArr; lv_label_dot_tmp_free &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[33b]"></a>lv_label_dot_tmp_free</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_label_dot_tmp_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = lv_label_dot_tmp_free &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_destructor
</UL>

<P><STRONG><a name="[12d]"></a>lv_label_event</STRONG> (Thumb, 676 bytes, Stack size 104 bytes, lto-llvm-e2b3d9.o(.text.lv_label_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 2040 + Unknown Stack Size
<LI>Call Chain = lv_label_event &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_250
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_235
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_228
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_181
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_141
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.1006
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space.1005
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.1004
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[31e]"></a>lv_label_refr_text</STRONG> (Thumb, 1616 bytes, Stack size 192 bytes, lto-llvm-e2b3d9.o(.text.lv_label_refr_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464 + Unknown Stack Size
<LI>Call Chain = lv_label_refr_text &rArr; lv_anim_start &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_35
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_242
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_226
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_187
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_103
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_size
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_prev
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_char_id
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_byte_id
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width.1006
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space.1005
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.1004
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_anim_speed
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[33a]"></a>lv_label_revert_dots</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_label_revert_dots))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = lv_label_revert_dots &rArr; lv_label_dot_tmp_free &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_byte_id
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
</UL>

<P><STRONG><a name="[2b3]"></a>lv_label_set_text</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_label_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1496 + Unknown Stack Size
<LI>Call Chain = lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_anim_start &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[2ac]"></a>lv_layout_register</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_layout_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = lv_layout_register &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[12e]"></a>lv_line_constructor</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_line_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_line_constructor &rArr; lv_obj_clear_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[12f]"></a>lv_line_event</STRONG> (Thumb, 456 bytes, Stack size 64 bytes, lto-llvm-e2b3d9.o(.text.lv_line_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1680 + Unknown Stack Size
<LI>Call Chain = lv_line_event &rArr; lv_draw_line &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_250
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa.187
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_line_width
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[233]"></a>lv_mem_alloc</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_mem_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next.865
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>

<P><STRONG><a name="[27e]"></a>lv_mem_buf_get</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_mem_buf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[b2]"></a>lv_mem_buf_release</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_mem_buf_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = lv_mem_buf_release &rArr; OUTLINED_FUNCTION_1 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.grid_update)
</UL>
<P><STRONG><a name="[231]"></a>lv_mem_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_destructor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[2a2]"></a>lv_mem_realloc</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_mem_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split.898
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next.865
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next.914
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used.899
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert.878
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
</UL>

<P><STRONG><a name="[2cf]"></a>lv_obj_add_flag</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_add_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_obj_add_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_236
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
</UL>

<P><STRONG><a name="[31a]"></a>lv_obj_add_state</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_add_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448 + Unknown Stack Size
<LI>Call Chain = lv_obj_add_state &rArr; lv_obj_set_state &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[118]"></a>lv_obj_add_style</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_add_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336 + Unknown Stack Size
<LI>Call Chain = lv_obj_add_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.theme_apply.455)
</UL>
<P><STRONG><a name="[2b4]"></a>lv_obj_align</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400 + Unknown Stack Size
<LI>Call Chain = lv_obj_align &rArr; lv_obj_set_pos &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[2d1]"></a>lv_obj_allocate_spec_attr</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_allocate_spec_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_251
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
</UL>

<P><STRONG><a name="[2b8]"></a>lv_obj_area_is_visible</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_area_is_visible))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[2b9]"></a>lv_obj_calculate_ext_draw_size</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_calculate_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_shadow_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[32e]"></a>lv_obj_calculate_style_text_align</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_calculate_style_text_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_obj_calculate_style_text_align &rArr; OUTLINED_FUNCTION_18 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[31c]"></a>lv_obj_class_create_obj</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_class_create_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = lv_obj_class_create_obj &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[31d]"></a>lv_obj_class_init_obj</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_class_init_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = lv_obj_class_init_obj &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[2d0]"></a>lv_obj_clear_flag</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_clear_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_obj_clear_flag &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_236
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_constructor
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
</UL>

<P><STRONG><a name="[311]"></a>lv_obj_clear_state</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_clear_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448 + Unknown Stack Size
<LI>Call Chain = lv_obj_clear_state &rArr; lv_obj_set_state &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
</UL>

<P><STRONG><a name="[35a]"></a>lv_obj_construct</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_construct))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = lv_obj_construct &rArr;  lv_obj_construct (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[119]"></a>lv_obj_constructor</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lv_obj_constructor &rArr; OUTLINED_FUNCTION_246 &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_246
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[c2]"></a>lv_obj_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_disp_drv_register)
</UL>
<P><STRONG><a name="[312]"></a>lv_obj_del</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = lv_obj_del &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
</UL>

<P><STRONG><a name="[11a]"></a>lv_obj_destructor</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = lv_obj_destructor &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_229
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[11b]"></a>lv_obj_event</STRONG> (Thumb, 2552 bytes, Stack size 208 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 2608 + Unknown Stack Size
<LI>Call Chain = lv_obj_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_240
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_173
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_172
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_171
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_155
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_148
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.239
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.245
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.246
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.240
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[204]"></a>lv_obj_event_base</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_event_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_obj_event_base
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_250
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>

<P><STRONG><a name="[274]"></a>lv_obj_get_child</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_child))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[372]"></a>lv_obj_get_child_id</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_child_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_obj_get_child_id
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply.455
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[33c]"></a>lv_obj_get_content_coords</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_content_coords))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_obj_get_content_coords &rArr; lv_obj_get_style_pad_top.207 &rArr; OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.207
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.206
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.205
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.208
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[292]"></a>lv_obj_get_content_height</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_content_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_obj_get_content_height &rArr; lv_obj_get_style_pad_top.207 &rArr; OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.207
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.208
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[1d1]"></a>lv_obj_get_content_width</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_content_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_obj_get_content_width &rArr; lv_obj_get_style_pad_right.206 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.206
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.205
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_181
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[344]"></a>lv_obj_get_disp</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[af]"></a>lv_obj_get_height</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_height))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.find_track_end)
</UL>
<P><STRONG><a name="[376]"></a>lv_obj_get_local_style_prop</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_obj_get_local_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
</UL>

<P><STRONG><a name="[31b]"></a>lv_obj_get_screen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_screen))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[270]"></a>lv_obj_get_scroll_bottom</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_scroll_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_get_scroll_bottom &rArr; lv_obj_get_style_pad_top.239 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_251
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_192
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.239
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.240
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.241
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_auto_size
</UL>

<P><STRONG><a name="[201]"></a>lv_obj_get_scroll_left</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_scroll_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_192
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_175
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.245
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.246
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.241
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.244
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_246
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[1d5]"></a>lv_obj_get_scroll_right</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_scroll_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_get_scroll_right &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_175
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.245
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.246
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width.241
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.244
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_183
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_auto_size
</UL>

<P><STRONG><a name="[364]"></a>lv_obj_get_scrollbar_area</STRONG> (Thumb, 1086 bytes, Stack size 88 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_scrollbar_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_obj_get_scrollbar_area &rArr; OUTLINED_FUNCTION_246 &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_52
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_246
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_211
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_210
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_148
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.239
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right.245
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[37a]"></a>lv_obj_get_self_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_self_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>

<P><STRONG><a name="[366]"></a>lv_obj_get_style_align</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_align &rArr; OUTLINED_FUNCTION_223 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_223
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[343]"></a>lv_obj_get_style_anim_speed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_anim_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_obj_get_style_anim_speed &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[297]"></a>lv_obj_get_style_arc_width</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_arc_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_arc_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
</UL>

<P><STRONG><a name="[2c4]"></a>lv_obj_get_style_base_dir</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_base_dir &rArr; OUTLINED_FUNCTION_18 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[379]"></a>lv_obj_get_style_base_dir.244</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_base_dir.244))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_base_dir.244 &rArr; OUTLINED_FUNCTION_18 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>

<P><STRONG><a name="[272]"></a>lv_obj_get_style_base_dir.436</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_base_dir.436))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_base_dir.436 &rArr; OUTLINED_FUNCTION_18 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[2a6]"></a>lv_obj_get_style_base_dir.445</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_base_dir.445))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_base_dir.445 &rArr; OUTLINED_FUNCTION_18 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[365]"></a>lv_obj_get_style_bg_opa</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_bg_opa &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[319]"></a>lv_obj_get_style_blend_mode</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_blend_mode &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[360]"></a>lv_obj_get_style_border_post</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_border_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_border_post &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[322]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_border_width &rArr; OUTLINED_FUNCTION_63 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[378]"></a>lv_obj_get_style_border_width.241</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_border_width.241))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_border_width.241 &rArr; OUTLINED_FUNCTION_63 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>

<P><STRONG><a name="[314]"></a>lv_obj_get_style_border_width.974</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_border_width.974))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_border_width.974 &rArr; OUTLINED_FUNCTION_63 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[35f]"></a>lv_obj_get_style_clip_corner</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_clip_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_clip_corner &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[275]"></a>lv_obj_get_style_flex_grow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_flex_grow))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_flex_grow &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[37f]"></a>lv_obj_get_style_height</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_height &rArr; OUTLINED_FUNCTION_30 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[28f]"></a>lv_obj_get_style_height.438</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_height.438))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_height.438 &rArr; OUTLINED_FUNCTION_30 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[2a8]"></a>lv_obj_get_style_height.447</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_height.447))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_height.447 &rArr; OUTLINED_FUNCTION_30 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[367]"></a>lv_obj_get_style_layout</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_layout &rArr; OUTLINED_FUNCTION_221 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_221
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[2c8]"></a>lv_obj_get_style_layout.202</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_layout.202))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_layout.202 &rArr; OUTLINED_FUNCTION_221 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_221
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[34b]"></a>lv_obj_get_style_line_width</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_line_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_line_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[36e]"></a>lv_obj_get_style_opa</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_opa &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1cb]"></a>lv_obj_get_style_opa.187</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_opa.187))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_opa.187 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_177
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[357]"></a>lv_obj_get_style_outline_opa</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_outline_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_outline_opa &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[358]"></a>lv_obj_get_style_outline_pad</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_outline_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_outline_pad &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[356]"></a>lv_obj_get_style_outline_width</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_outline_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_outline_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[375]"></a>lv_obj_get_style_pad_bottom.208</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_bottom.208))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_bottom.208 &rArr; OUTLINED_FUNCTION_54 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
</UL>

<P><STRONG><a name="[369]"></a>lv_obj_get_style_pad_bottom.240</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_bottom.240))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_bottom.240 &rArr; OUTLINED_FUNCTION_54 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1a3]"></a>lv_obj_get_style_pad_bottom.943</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_bottom.943))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_bottom.943 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_180
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_107
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[2dd]"></a>lv_obj_get_style_pad_bottom.949</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_bottom.949))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_bottom.949 &rArr; OUTLINED_FUNCTION_54 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[291]"></a>lv_obj_get_style_pad_column</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_column &rArr; OUTLINED_FUNCTION_220 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_220
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[2a5]"></a>lv_obj_get_style_pad_column.444</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_column.444))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_column.444 &rArr; OUTLINED_FUNCTION_220 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_220
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[323]"></a>lv_obj_get_style_pad_left.205</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_left.205))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_left.205 &rArr; OUTLINED_FUNCTION_98 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_98
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[36a]"></a>lv_obj_get_style_pad_left.246</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_left.246))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_left.246 &rArr; OUTLINED_FUNCTION_98 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_98
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1f1]"></a>lv_obj_get_style_pad_left.940</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_left.940))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_left.940 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_234
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
</UL>

<P><STRONG><a name="[2da]"></a>lv_obj_get_style_pad_left.946</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_left.946))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_left.946 &rArr; OUTLINED_FUNCTION_98 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_98
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[374]"></a>lv_obj_get_style_pad_right.206</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_right.206))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_right.206 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
</UL>

<P><STRONG><a name="[36b]"></a>lv_obj_get_style_pad_right.245</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_right.245))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_right.245 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[1a5]"></a>lv_obj_get_style_pad_right.941</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_right.941))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_right.941 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_108
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
</UL>

<P><STRONG><a name="[2db]"></a>lv_obj_get_style_pad_right.947</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_right.947))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_right.947 &rArr; OUTLINED_FUNCTION_67 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[290]"></a>lv_obj_get_style_pad_row</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_row &rArr; OUTLINED_FUNCTION_222 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_222
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[2a4]"></a>lv_obj_get_style_pad_row.443</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_row.443))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_row.443 &rArr; OUTLINED_FUNCTION_222 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_222
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[324]"></a>lv_obj_get_style_pad_top.207</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_top.207))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_top.207 &rArr; OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[368]"></a>lv_obj_get_style_pad_top.239</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_top.239))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_top.239 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[296]"></a>lv_obj_get_style_pad_top.942</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_top.942))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_top.942 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_center
</UL>

<P><STRONG><a name="[2dc]"></a>lv_obj_get_style_pad_top.948</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_top.948))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_top.948 &rArr; OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[315]"></a>lv_obj_get_style_pad_top.975</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_pad_top.975))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_pad_top.975 &rArr; OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[b0]"></a>lv_obj_get_style_prop</STRONG> (Thumb, 420 bytes, Stack size 64 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + In Cycle
<LI>Call Chain = lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_prop_get_default
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_99
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_98
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_83
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_67
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_64
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_54
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_223
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_222
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_221
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_220
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_189
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_153
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_100
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space.1005
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.942
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.239
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.940
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom.943
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa.187
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_line_width
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_flex_grow
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_arc_width
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_anim_speed
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_dsc
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_col_dsc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_init_draw_rect_dsc)
<LI> lto-llvm-e2b3d9.o(.text.flex_update)
<LI> lto-llvm-e2b3d9.o(.text.grid_update)
</UL>
<P><STRONG><a name="[363]"></a>lv_obj_get_style_radius</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_radius &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[354]"></a>lv_obj_get_style_shadow_ofs_x</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_shadow_ofs_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_shadow_ofs_x &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[355]"></a>lv_obj_get_style_shadow_ofs_y</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_shadow_ofs_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_shadow_ofs_y &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[352]"></a>lv_obj_get_style_shadow_opa</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_shadow_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_shadow_opa &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[353]"></a>lv_obj_get_style_shadow_spread</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_shadow_spread))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_shadow_spread &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[351]"></a>lv_obj_get_style_shadow_width</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_shadow_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_shadow_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[381]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_obj_get_style_text_font &rArr; OUTLINED_FUNCTION_153 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_153
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
</UL>

<P><STRONG><a name="[340]"></a>lv_obj_get_style_text_font.1004</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_text_font.1004))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_obj_get_style_text_font.1004 &rArr; OUTLINED_FUNCTION_153 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_153
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[286]"></a>lv_obj_get_style_text_font.973</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_text_font.973))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_obj_get_style_text_font.973 &rArr; OUTLINED_FUNCTION_153 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_153
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[341]"></a>lv_obj_get_style_text_letter_space</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_text_letter_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_text_letter_space &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[287]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[342]"></a>lv_obj_get_style_text_line_space.1005</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_text_line_space.1005))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_text_line_space.1005 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[362]"></a>lv_obj_get_style_transform_height</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_transform_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_transform_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[361]"></a>lv_obj_get_style_transform_width</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_transform_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_transform_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[382]"></a>lv_obj_get_style_width</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_width &rArr; OUTLINED_FUNCTION_17 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[33d]"></a>lv_obj_get_style_width.1006</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_width.1006))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_width.1006 &rArr; OUTLINED_FUNCTION_17 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[28e]"></a>lv_obj_get_style_width.437</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_width.437))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_width.437 &rArr; OUTLINED_FUNCTION_17 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[2a7]"></a>lv_obj_get_style_width.446</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_style_width.446))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_get_style_width.446 &rArr; OUTLINED_FUNCTION_17 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[ae]"></a>lv_obj_get_width</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_width))
<BR><BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_45
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.find_track_end)
</UL>
<P><STRONG><a name="[32c]"></a>lv_obj_get_y</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_get_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_obj_get_y &rArr; lv_obj_get_style_pad_top.207 &rArr; OUTLINED_FUNCTION_19 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.207
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[2d2]"></a>lv_obj_init_draw_arc_dsc</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_init_draw_arc_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_obj_init_draw_arc_dsc &rArr; OUTLINED_FUNCTION_177 &rArr; lv_obj_get_style_opa.187 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_189
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_177
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[1f3]"></a>lv_obj_init_draw_label_dsc</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_init_draw_label_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_obj_init_draw_label_dsc &rArr; OUTLINED_FUNCTION_177 &rArr; lv_obj_get_style_opa.187 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_189
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_177
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_235
</UL>

<P><STRONG><a name="[289]"></a>lv_obj_init_draw_rect_dsc</STRONG> (Thumb, 572 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_init_draw_rect_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_init_draw_rect_dsc &rArr; OUTLINED_FUNCTION_177 &rArr; lv_obj_get_style_opa.187 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_63
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_189
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_177
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa.187
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[1e6]"></a>lv_obj_invalidate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_241
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_y_anim
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_x_anim
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>

<P><STRONG><a name="[2c0]"></a>lv_obj_invalidate_area</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_invalidate_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[1f5]"></a>lv_obj_is_layout_positioned</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_is_layout_positioned))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_obj_is_layout_positioned &rArr; lv_obj_get_style_layout.202 &rArr; OUTLINED_FUNCTION_221 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout.202
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_236
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>

<P><STRONG><a name="[1c3]"></a>lv_obj_mark_layout_as_dirty</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_mark_layout_as_dirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = lv_obj_mark_layout_as_dirty &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_155
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>

<P><STRONG><a name="[276]"></a>lv_obj_move_children_by</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_move_children_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = lv_obj_move_children_by &rArr;  lv_obj_move_children_by (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[2c7]"></a>lv_obj_move_to</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_move_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = lv_obj_move_to &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_239
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_219
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top.207
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left.205
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[35d]"></a>lv_obj_readjust_scroll</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_readjust_scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384 + Unknown Stack Size
<LI>Call Chain = lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_251
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_183
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.244
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>

<P><STRONG><a name="[293]"></a>lv_obj_refr_size</STRONG> (Thumb, 804 bytes, Stack size 64 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_refr_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456 + Unknown Stack Size
<LI>Call Chain = lv_obj_refr_size &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_246
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_239
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_219
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_auto_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[383]"></a>lv_obj_refresh_ext_draw_size</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_refresh_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = lv_obj_refresh_ext_draw_size &rArr; OUTLINED_FUNCTION_21 &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>

<P><STRONG><a name="[313]"></a>lv_obj_refresh_self_size</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_refresh_self_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = lv_obj_refresh_self_size &rArr; lv_obj_mark_layout_as_dirty &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[350]"></a>lv_obj_refresh_style</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_refresh_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
</UL>

<P><STRONG><a name="[359]"></a>lv_obj_remove_style</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_remove_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[2e3]"></a>lv_obj_remove_style_all</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_remove_style_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352 + Unknown Stack Size
<LI>Call Chain = lv_obj_remove_style_all &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[36c]"></a>lv_obj_scroll_by</STRONG> (Thumb, 348 bytes, Stack size 96 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_238
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_103
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[370]"></a>lv_obj_scroll_to_x</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_scroll_to_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = lv_obj_scroll_to_x &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_183
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir.244
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[371]"></a>lv_obj_scroll_to_y</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_scroll_to_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = lv_obj_scroll_to_y &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[35b]"></a>lv_obj_scrollbar_invalidate</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_scrollbar_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_obj_scrollbar_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>

<P><STRONG><a name="[387]"></a>lv_obj_set_flex_flow</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_flex_flow))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_flex_flow &rArr; lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[321]"></a>lv_obj_set_height</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_height &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[eb]"></a>lv_obj_set_local_style_prop</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_win_constructor)
</UL>
<P><STRONG><a name="[32b]"></a>lv_obj_set_pos</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_pos &rArr; lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[2e4]"></a>lv_obj_set_scrollbar_mode</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_scrollbar_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_scrollbar_mode &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[389]"></a>lv_obj_set_size</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_size &rArr; lv_obj_set_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[34e]"></a>lv_obj_set_state</STRONG> (Thumb, 1260 bytes, Stack size 144 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_state &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_94
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_75
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
</UL>

<P><STRONG><a name="[32a]"></a>lv_obj_set_style_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_style_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_style_align &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[388]"></a>lv_obj_set_style_layout</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_style_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
</UL>

<P><STRONG><a name="[31f]"></a>lv_obj_set_width</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[32d]"></a>lv_obj_set_y</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_set_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = lv_obj_set_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[22a]"></a>lv_obj_update_layout</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_obj_update_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520 + Unknown Stack Size
<LI>Call Chain = lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[22d]"></a>lv_refr_area_part</STRONG> (Thumb, 372 bytes, Stack size 104 bytes, lto-llvm-e2b3d9.o(.text.lv_refr_area_part))
<BR><BR>[Stack]<UL><LI>Max Depth = 2504 + Unknown Stack Size
<LI>Call Chain = lv_refr_area_part &rArr; lv_draw_rect &rArr; lv_draw_img &rArr; show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[38a]"></a>lv_refr_get_top_obj</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_refr_get_top_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = lv_refr_get_top_obj &rArr;  lv_refr_get_top_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[38b]"></a>lv_refr_obj</STRONG> (Thumb, 260 bytes, Stack size 80 bytes, lto-llvm-e2b3d9.o(.text.lv_refr_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + In Cycle
<LI>Call Chain = lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>

<P><STRONG><a name="[db]"></a>lv_refr_obj_and_children</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_refr_obj_and_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = lv_refr_obj_and_children &rArr; lv_disp_get_scr_act &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_refr_area_part)
</UL>
<P><STRONG><a name="[236]"></a>lv_snprintf</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>

<P><STRONG><a name="[1a9]"></a>lv_style_get_prop</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_style_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>

<P><STRONG><a name="[380]"></a>lv_style_prop_get_default</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_prop_get_default))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[38c]"></a>lv_style_remove_prop</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_style_remove_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264<LI>Call Chain = lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_149
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
</UL>

<P><STRONG><a name="[385]"></a>lv_style_reset</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_style_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = lv_style_reset &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_149
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset.456
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>

<P><STRONG><a name="[38e]"></a>lv_style_set_arc_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_arc_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_arc_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[e0]"></a>lv_style_set_bg_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_bg_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[e4]"></a>lv_style_set_bg_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_bg_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[38f]"></a>lv_style_set_color_filter_dsc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_color_filter_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_color_filter_dsc &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[390]"></a>lv_style_set_color_filter_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_color_filter_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_color_filter_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[391]"></a>lv_style_set_line_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_line_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_line_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[392]"></a>lv_style_set_line_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_line_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_line_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[393]"></a>lv_style_set_outline_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_outline_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_outline_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[394]"></a>lv_style_set_outline_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_outline_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_outline_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[395]"></a>lv_style_set_outline_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_outline_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_outline_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[ea]"></a>lv_style_set_pad_all.457</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_all.457))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = lv_style_set_pad_all.457 &rArr; lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[399]"></a>lv_style_set_pad_bottom</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_pad_bottom &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[e6]"></a>lv_style_set_pad_column</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_pad_column &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[396]"></a>lv_style_set_pad_left</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_pad_left &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all.457
</UL>

<P><STRONG><a name="[397]"></a>lv_style_set_pad_right</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all.457
</UL>

<P><STRONG><a name="[e7]"></a>lv_style_set_pad_row</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_pad_row &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[398]"></a>lv_style_set_pad_top</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_pad_top))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all.457
</UL>

<P><STRONG><a name="[e3]"></a>lv_style_set_prop</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_149
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_137
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_opa
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_dsc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_color
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[e1]"></a>lv_style_set_radius</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_radius &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[e5]"></a>lv_style_set_text_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_text_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[df]"></a>lv_style_set_transition</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_style_set_transition))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296<LI>Call Chain = lv_style_set_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[2e2]"></a>lv_theme_default_init</STRONG> (Thumb, 2364 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.lv_theme_default_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = lv_theme_default_init &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_71
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_70
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_51
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_37
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_253
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_208
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_207
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_206
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_204
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_167
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_125
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_124
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all.457
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_opa
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_dsc
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_color
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_dpx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[2ab]"></a>lv_timer_create</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.lv_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[2b6]"></a>lv_timer_del</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lv_timer_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = lv_timer_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[2b5]"></a>lv_timer_time_remaining</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_timer_time_remaining))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_timer_time_remaining
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[34d]"></a>lv_tlsf_free</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_tlsf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove.912
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next.914
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free.901
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert.878
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb.913
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>

<P><STRONG><a name="[34c]"></a>lv_tlsf_malloc</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_tlsf_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192<LI>Call Chain = lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_95
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block.882
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split.898
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used.899
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next.879
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert.878
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>

<P><STRONG><a name="[be]"></a>lv_trigo_sin</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_trigo_sin))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_198
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_135
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_101
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rounded_area
</UL>
<BR>[Address Reference Count : 4]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_draw_arc)
<LI> lto-llvm-e2b3d9.o(.text.lv_draw_img)
<LI> lto-llvm-e2b3d9.o(.text.lv_draw_map)
<LI> lto-llvm-e2b3d9.o(.text.inv_arc_area)
</UL>
<P><STRONG><a name="[2f5]"></a>lv_txt_get_size</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = lv_txt_get_size &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[20a]"></a>lv_txt_get_width</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = lv_txt_get_width &rArr; _lv_txt_encoded_letter_next_2 &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_72
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_65
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_40
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
</UL>

<P><STRONG><a name="[349]"></a>lv_txt_utf8_get_byte_id</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_utf8_get_byte_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_txt_utf8_get_byte_id
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_size
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[2f7]"></a>lv_txt_utf8_get_char_id</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_utf8_get_char_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_txt_utf8_get_char_id &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[238]"></a>lv_txt_utf8_next</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_utf8_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_prev
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_char_id
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
</UL>

<P><STRONG><a name="[348]"></a>lv_txt_utf8_prev</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_utf8_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_txt_utf8_prev &rArr; lv_txt_utf8_next
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_size
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_next
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[34a]"></a>lv_txt_utf8_size</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.lv_txt_utf8_size))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_prev
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_get_byte_id
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[11c]"></a>lv_win_constructor</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.lv_win_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = lv_win_constructor &rArr; lv_obj_set_size &rArr; lv_obj_set_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.rodata)
</UL>
<P><STRONG><a name="[b3]"></a>lvgl_log_output</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.lvgl_log_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lvgl_log_output &rArr; log_output
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_log_add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.gui_thread)
</UL>
<P><STRONG><a name="[1ab]"></a>mask_mix</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.mask_mix))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_190
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_114
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[2aa]"></a>memory_alloc</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.memory_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = memory_alloc &rArr; block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_malloc
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_calloc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[27a]"></a>memory_calloc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.memory_calloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = memory_calloc &rArr; memory_alloc &rArr; block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_calloc
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_create
</UL>

<P><STRONG><a name="[2af]"></a>memory_free</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.memory_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = memory_free &rArr; block_merge_next &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_realloc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rte_free
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[10b]"></a>memory_pool</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, lto-llvm-e2b3d9.o(.text.memory_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = memory_pool &rArr; block_insert &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_186
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[35c]"></a>obj_del_core</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.obj_del_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + In Cycle
<LI>Call Chain = obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>

<P><STRONG><a name="[23b]"></a>os_kernel_is_active</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.os_kernel_is_active), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = os_kernel_is_active
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_release
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mutex_acquire
</UL>

<P><STRONG><a name="[273]"></a>place_content</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.place_content))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = place_content
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[316]"></a>position_to_selected</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.position_to_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = position_to_selected &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font.973
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[384]"></a>refresh_children_style</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.refresh_children_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + In Cycle
<LI>Call Chain = refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_84
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_251
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>

<P><STRONG><a name="[25c]"></a>remove_free_block</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, lto-llvm-e2b3d9.o(.text.remove_free_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = remove_free_block &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[26a]"></a>remove_free_block.882</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.remove_free_block.882))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = remove_free_block.882 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove.912
</UL>

<P><STRONG><a name="[3a7]"></a>report_style_change_core</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.report_style_change_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[10e]"></a>rte_calloc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.rte_calloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = rte_calloc &rArr; memory_calloc &rArr; memory_alloc &rArr; block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_calloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[112]"></a>rte_data_out</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.rte_data_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rte_data_out
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_209
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[10c]"></a>rte_free</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.rte_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = rte_free &rArr; memory_free &rArr; block_merge_next &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[110]"></a>rte_get_tick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.rte_get_tick))
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[10f]"></a>rte_malloc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.rte_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = rte_malloc &rArr; memory_alloc &rArr; block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[a6]"></a>rte_mutex_lock</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.rte_mutex_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rte_mutex_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
<LI> lto-llvm-e2b3d9.o(.text.com_create)
</UL>
<P><STRONG><a name="[a5]"></a>rte_mutex_unlock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.rte_mutex_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rte_mutex_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
<LI> lto-llvm-e2b3d9.o(.text.com_create)
</UL>
<P><STRONG><a name="[10d]"></a>rte_realloc</STRONG> (Thumb, 376 bytes, Stack size 64 bytes, lto-llvm-e2b3d9.o(.text.rte_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = rte_realloc &rArr; memory_free &rArr; block_merge_next &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_free
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[113]"></a>running_timer</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.running_timer))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[d6]"></a>scroll_anim_ready_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.scroll_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = scroll_anim_ready_cb &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_scroll_by)
</UL>
<P><STRONG><a name="[386]"></a>scroll_by_raw</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.scroll_by_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_97
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
</UL>

<P><STRONG><a name="[d5]"></a>scroll_x_anim</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.scroll_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = scroll_x_anim &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_event)
<LI> lto-llvm-e2b3d9.o(.text.lv_obj_scroll_to_x)
</UL>
<P><STRONG><a name="[d4]"></a>scroll_y_anim</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.scroll_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = scroll_y_anim &rArr; scroll_by_raw &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_event)
<LI> lto-llvm-e2b3d9.o(.text.lv_obj_scroll_to_y)
</UL>
<P><STRONG><a name="[cd]"></a>set_ofs_x_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.set_ofs_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = set_ofs_x_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_label_constructor)
<LI> lto-llvm-e2b3d9.o(.text.lv_label_refr_text)
</UL>
<P><STRONG><a name="[ce]"></a>set_ofs_y_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.set_ofs_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = set_ofs_y_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; OUTLINED_FUNCTION_4 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_label_constructor)
<LI> lto-llvm-e2b3d9.o(.text.lv_label_refr_text)
</UL>
<P><STRONG><a name="[2fb]"></a>shadow_blur_corner</STRONG> (Thumb, 380 bytes, Stack size 72 bytes, lto-llvm-e2b3d9.o(.text.shadow_blur_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = shadow_blur_corner &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[136]"></a>shellBackspace</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellBackspace))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = shellBackspace &rArr; shellDeleteByte &rArr; shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDeleteByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[1cd]"></a>shellCheckPermission</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellCheckPermission))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_179
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTask
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
</UL>

<P><STRONG><a name="[13e]"></a>shellClear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shellClear &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3d4]"></a>shellClearCommandLine</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellClearCommandLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = shellClearCommandLine &rArr; shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_166
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDeleteCommandLine
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHistory
</UL>

<P><STRONG><a name="[13b]"></a>shellCmds</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellCmds))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = shellCmds &rArr; shellListCommand &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[137]"></a>shellDelete</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellDelete))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3d2]"></a>shellDeleteByte</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellDeleteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = shellDeleteByte &rArr; shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_166
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDeleteCommandLine
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellBackspace
</UL>

<P><STRONG><a name="[3d6]"></a>shellDeleteCommandLine</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.shellDeleteCommandLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDeleteByte
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellClearCommandLine
</UL>

<P><STRONG><a name="[132]"></a>shellDown</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = shellDown &rArr; shellHistory &rArr; shellClearCommandLine &rArr; shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHistory
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[138]"></a>shellEnter</STRONG> (Thumb, 1140 bytes, Stack size 96 bytes, lto-llvm-e2b3d9.o(.text.shellEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = shellEnter &rArr; shellWriteReturnValue &rArr; shellToDec
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteReturnValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWritePrompt
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellStringCopy
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetUser
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetVarValue
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellExtParseChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3db]"></a>shellExtParseChar</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellExtParseChar))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[3e0]"></a>shellGetCommandName</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellGetCommandName))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellToHex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteCommandHelp
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListItem
</UL>

<P><STRONG><a name="[3d3]"></a>shellGetCurrent</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellGetCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellVars
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUsers
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetVar
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellKeys
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHelp
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellCmds
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellClear
</UL>

<P><STRONG><a name="[3dc]"></a>shellGetVarValue</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellGetVarValue))
<BR><BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[139]"></a>shellHelp</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.shellHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = shellHelp &rArr; shellListCommand &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteCommandHelp
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3d8]"></a>shellHistory</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellHistory))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = shellHistory &rArr; shellClearCommandLine &rArr; shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellStringCopy
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellClearCommandLine
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUp
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDown
</UL>

<P><STRONG><a name="[13d]"></a>shellKeys</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellKeys))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shellKeys &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_179
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_123
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_122
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_109
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[134]"></a>shellLeft</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.shellLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shellLeft
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3d7]"></a>shellListCommand</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellListCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shellListCommand &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_179
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_123
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_109
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHelp
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellCmds
</UL>

<P><STRONG><a name="[1a7]"></a>shellListItem</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.shellListItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCommandName
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_109
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
</UL>

<P><STRONG><a name="[133]"></a>shellRight</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.shellRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shellRight
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3da]"></a>shellSeekCommand</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellSeekCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = shellSeekCommand &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCommandName
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellCheckPermission
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteCommandHelp
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetVar
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[3de]"></a>shellSetUser</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellSetUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shellSetUser &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_thread
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[130]"></a>shellSetVar</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellSetVar))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = shellSetVar &rArr; shellShowVar &rArr; shellToDec
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellStringCopy
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3dd]"></a>shellShowVar</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.shellShowVar))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = shellShowVar &rArr; shellToDec
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellToHex
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellToDec
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetVarValue
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetVar
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[3e6]"></a>shellStringCompare</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.shellStringCompare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = shellStringCompare
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
</UL>

<P><STRONG><a name="[3d9]"></a>shellStringCopy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellStringCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = shellStringCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetVar
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHistory
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[135]"></a>shellTab</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.shellTab))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = shellTab &rArr; shellListCommand &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_182
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteCommandHelp
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellStringCopy
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellStringCompare
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListItem
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCommandName
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellClearCommandLine
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellCheckPermission
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[116]"></a>shellTask</STRONG> (Thumb, 476 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = shellTask &rArr; OUTLINED_FUNCTION_182 &rArr; shellWritePrompt &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_182
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellCheckPermission
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[3e5]"></a>shellToDec</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, lto-llvm-e2b3d9.o(.text.shellToDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = shellToDec
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteReturnValue
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
</UL>

<P><STRONG><a name="[3e1]"></a>shellToHex</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellToHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = shellToHex
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteReturnValue
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCommandName
</UL>

<P><STRONG><a name="[131]"></a>shellUp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.shellUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = shellUp &rArr; shellHistory &rArr; shellClearCommandLine &rArr; shellDeleteCommandLine &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHistory
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[13a]"></a>shellUsers</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellUsers))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shellUsers &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_179
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_123
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_122
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_109
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[13c]"></a>shellVars</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellVars))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shellVars &rArr; OUTLINED_FUNCTION_109 &rArr; shellListItem &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_179
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_123
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_122
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_109
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCurrent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(shellCommand)
</UL>
<P><STRONG><a name="[3e2]"></a>shellWriteCommandHelp</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.shellWriteCommandHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = shellWriteCommandHelp &rArr; shellSeekCommand &rArr; shellGetCommandName &rArr; shellToHex
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellGetCommandName
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHelp
</UL>

<P><STRONG><a name="[1d3]"></a>shellWritePrompt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.shellWritePrompt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shellWritePrompt &rArr; shellWriteString
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_182
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[3df]"></a>shellWriteReturnValue</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.shellWriteReturnValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = shellWriteReturnValue &rArr; shellToDec
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteString
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellToHex
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellToDec
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
</UL>

<P><STRONG><a name="[ff]"></a>shellWriteString</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.shellWriteString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = shellWriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_73
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteReturnValue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWritePrompt
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellWriteCommandHelp
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellVars
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellUsers
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTask
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellTab
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellShowVar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetVar
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetUser
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListItem
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellListCommand
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellKeys
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellHistory
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellEnter
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellDeleteCommandLine
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellClear
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-e2b3d9.o(.text.shellShowVar)
<LI> lto-llvm-e2b3d9.o(.text.shellWritePrompt)
<LI> lto-llvm-e2b3d9.o(.text.shellWriteReturnValue)
</UL>
<P><STRONG><a name="[2f2]"></a>show_error</STRONG> (Thumb, 132 bytes, Stack size 128 bytes, lto-llvm-e2b3d9.o(.text.show_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 2064 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = show_error &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[111]"></a>single_timer_free_cb</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.single_timer_free_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = single_timer_free_cb &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds_vector_at
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[2ad]"></a>spi_create</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.spi_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_create
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_thread
</UL>

<P><STRONG><a name="[101]"></a>spi_recv</STRONG> (Thumb, 1028 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.spi_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_recv &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_59
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_46
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_248
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_214
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_213
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_150
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_145
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_127
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_126
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_112
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_111
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_105
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.spi_create)
</UL>
<P><STRONG><a name="[100]"></a>spi_send</STRONG> (Thumb, 436 bytes, Stack size 32 bytes, lto-llvm-e2b3d9.o(.text.spi_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_send &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_56
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_248
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_245
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_243
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_150
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_145
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_127
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_126
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_112
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_105
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.spi_create)
</UL>
<P><STRONG><a name="[102]"></a>spi_send_async</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.spi_send_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = spi_send_async &rArr; HAL_DMA_Start_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_127
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.spi_create)
</UL>
<P><STRONG><a name="[de]"></a>style_init_reset.456</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.style_init_reset.456))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = style_init_reset.456 &rArr; lv_style_reset &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_next.914 &rArr; block_absorb.913 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[ee]"></a>system_thread</STRONG> (Thumb, 1692 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.system_thread))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = system_thread &rArr; com_create &rArr; memory_calloc &rArr; memory_alloc &rArr; block_prepare_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; OUTLINED_FUNCTION_2 &rArr; log_out &rArr; log_snprintf &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_227
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_186
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_182
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSetUser
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shellSeekCommand
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_out
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_control
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds_vector_unlock
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds_vector_lock
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ds_vector_at
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_create
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.main)
</UL>
<P><STRONG><a name="[dd]"></a>theme_apply.455</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.theme_apply.455))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360 + Unknown Stack Size
<LI>Call Chain = theme_apply.455 &rArr; lv_obj_add_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_62
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_164
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_163
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_162
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_161
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_theme_default_init)
</UL>
<P><STRONG><a name="[da]"></a>trans_anim_cb</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.trans_anim_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344 + Unknown Stack Size
<LI>Call Chain = trans_anim_cb &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_137
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_set_state)
</UL>
<P><STRONG><a name="[d8]"></a>trans_anim_ready_cb</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lto-llvm-e2b3d9.o(.text.trans_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = trans_anim_ready_cb &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_set_state)
</UL>
<P><STRONG><a name="[d9]"></a>trans_anim_start_cb</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.trans_anim_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = trans_anim_start_cb &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.lv_obj_set_state)
</UL>
<P><STRONG><a name="[34f]"></a>trans_del</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, lto-llvm-e2b3d9.o(.text.trans_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_split.898 &rArr; block_mark_as_free.901 &rArr; block_link_next.879 &rArr; block_next.865 &rArr; OUTLINED_FUNCTION_0 &rArr; _lv_log_add &rArr; lv_snprintf &rArr; _vsnprintf &rArr; OUTLINED_FUNCTION_184 &rArr; _ntoa_long &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
</UL>

<P><STRONG><a name="[b1]"></a>unicode_list_compare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-e2b3d9.o(.text.unicode_list_compare))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.get_glyph_dsc_id)
</UL>
<P><STRONG><a name="[114]"></a>userShellRead</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lto-llvm-e2b3d9.o(.text.userShellRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = userShellRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL>
<P><STRONG><a name="[115]"></a>userShellWrite</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lto-llvm-e2b3d9.o(.text.userShellWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = userShellWrite &rArr; log_output
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-e2b3d9.o(.text.system_thread)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
